services:
  django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile
    image: classlab_local_django
    container_name: classlab_local_django
    depends_on:
      - postgres
      - redis
      - mailpit
    volumes:
      - .:/app:z
      - ./kubeconfig:/kube/config
    environment:
      - USE_DOCKER=yes
      - PYTHONDEVMODE=1
      - IPYTHONDIR=/app/.ipython
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_FLOWER_USER=debug
      - CELERY_FLOWER_PASSWORD=debug
      - CONTACT_EMAIL=kontakt@classlab.pl
      - PROXY_DOMAIN=apps.classlab.localhost
      - DATABASE_URL=postgres://postgres:postgres@postgres:5432/classlab
      - KUBECONFIG=/kube/config
      - PROMETHEUS_URL=http://host.docker.internal:9090
    ports:
      - "8000:8000"
    command: /start

  postgres:
    image: postgres:16
    container_name: classlab_local_postgres
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=classlab
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
    ports:
      - "5432:5432"

  mailpit:
    image: docker.io/axllent/mailpit:latest
    container_name: classlab_local_mailpit
    ports:
      - "8025:8025"

  redis:
    image: redis:6
    container_name: classlab_local_redis

  celeryworker:
    <<: *django
    image: classlab_local_celeryworker
    container_name: classlab_local_celeryworker
    depends_on:
      - redis
      - postgres
      - mailpit
    ports: []
    command: /start-celeryworker

  celerybeat:
    <<: *django
    image: classlab_local_celerybeat
    container_name: classlab_local_celerybeat
    depends_on:
      - redis
      - postgres
      - mailpit
    ports: []
    command: /start-celerybeat

  flower:
    <<: *django
    image: classlab_local_flower
    container_name: classlab_local_flower
    ports:
      - "5555:5555"
    command: /start-flower

  k8s:
    image: rancher/k3s:v1.31.0-k3s1
    container_name: classlab_local_k8s
    command: server --tls-san k8s
    tmpfs:
    - /run
    - /var/run
    ulimits:
      nproc: 65535
      nofile:
        soft: 65535
        hard: 65535
    privileged: true
    environment:
    - K3S_TOKEN=token
    - K3S_KUBECONFIG_OUTPUT=/output/kubeconfig.yaml
    - K3S_KUBECONFIG_MODE=666
    volumes:
    - k8s-dev:/var/lib/rancher/k3s
    - .:/output
    ports:
    - 6443:6443  # Kubernetes API Server
    - 80:80      # Ingress controller port 80
    - 443:443    # Ingress controller port 443
    - 9090:30090  # Prometheus

  init-k8s-kubeconfig:
    image: busybox
    container_name: classlab_local_init_k8s_kubeconfig
    depends_on:
      - k8s
    volumes:
      - .:/app:z
    command: >
      /bin/sh -c "cp /app/kubeconfig.yaml /app/kubeconfig &&
      sed -i 's/127.0.0.1/k8s/g' /app/kubeconfig"

  init-k8s-helm:
    image: chatwork/helmfile
    container_name: classlab_local_init_k8s_helm
    depends_on:
      - k8s
    volumes:
      - .:/app:z
    command: --kubeconfig /app/kubeconfig --file /app/helmfile.yaml sync

volumes:
  k8s-dev:
