[
  {
    "model": "auth.permission",
    "pk": 1,
    "fields": {
      "name": "Can add permission",
      "content_type": 1,
      "codename": "add_permission"
    }
  },
  {
    "model": "auth.permission",
    "pk": 2,
    "fields": {
      "name": "Can change permission",
      "content_type": 1,
      "codename": "change_permission"
    }
  },
  {
    "model": "auth.permission",
    "pk": 3,
    "fields": {
      "name": "Can delete permission",
      "content_type": 1,
      "codename": "delete_permission"
    }
  },
  {
    "model": "auth.permission",
    "pk": 4,
    "fields": {
      "name": "Can view permission",
      "content_type": 1,
      "codename": "view_permission"
    }
  },
  {
    "model": "auth.permission",
    "pk": 5,
    "fields": {
      "name": "Can add group",
      "content_type": 2,
      "codename": "add_group"
    }
  },
  {
    "model": "auth.permission",
    "pk": 6,
    "fields": {
      "name": "Can change group",
      "content_type": 2,
      "codename": "change_group"
    }
  },
  {
    "model": "auth.permission",
    "pk": 7,
    "fields": {
      "name": "Can delete group",
      "content_type": 2,
      "codename": "delete_group"
    }
  },
  {
    "model": "auth.permission",
    "pk": 8,
    "fields": {
      "name": "Can view group",
      "content_type": 2,
      "codename": "view_group"
    }
  },
  {
    "model": "auth.permission",
    "pk": 9,
    "fields": {
      "name": "Can add content type",
      "content_type": 3,
      "codename": "add_contenttype"
    }
  },
  {
    "model": "auth.permission",
    "pk": 10,
    "fields": {
      "name": "Can change content type",
      "content_type": 3,
      "codename": "change_contenttype"
    }
  },
  {
    "model": "auth.permission",
    "pk": 11,
    "fields": {
      "name": "Can delete content type",
      "content_type": 3,
      "codename": "delete_contenttype"
    }
  },
  {
    "model": "auth.permission",
    "pk": 12,
    "fields": {
      "name": "Can view content type",
      "content_type": 3,
      "codename": "view_contenttype"
    }
  },
  {
    "model": "auth.permission",
    "pk": 13,
    "fields": {
      "name": "Can add session",
      "content_type": 4,
      "codename": "add_session"
    }
  },
  {
    "model": "auth.permission",
    "pk": 14,
    "fields": {
      "name": "Can change session",
      "content_type": 4,
      "codename": "change_session"
    }
  },
  {
    "model": "auth.permission",
    "pk": 15,
    "fields": {
      "name": "Can delete session",
      "content_type": 4,
      "codename": "delete_session"
    }
  },
  {
    "model": "auth.permission",
    "pk": 16,
    "fields": {
      "name": "Can view session",
      "content_type": 4,
      "codename": "view_session"
    }
  },
  {
    "model": "auth.permission",
    "pk": 17,
    "fields": {
      "name": "Can add site",
      "content_type": 5,
      "codename": "add_site"
    }
  },
  {
    "model": "auth.permission",
    "pk": 18,
    "fields": {
      "name": "Can change site",
      "content_type": 5,
      "codename": "change_site"
    }
  },
  {
    "model": "auth.permission",
    "pk": 19,
    "fields": {
      "name": "Can delete site",
      "content_type": 5,
      "codename": "delete_site"
    }
  },
  {
    "model": "auth.permission",
    "pk": 20,
    "fields": {
      "name": "Can view site",
      "content_type": 5,
      "codename": "view_site"
    }
  },
  {
    "model": "auth.permission",
    "pk": 21,
    "fields": {
      "name": "Can add log entry",
      "content_type": 6,
      "codename": "add_logentry"
    }
  },
  {
    "model": "auth.permission",
    "pk": 22,
    "fields": {
      "name": "Can change log entry",
      "content_type": 6,
      "codename": "change_logentry"
    }
  },
  {
    "model": "auth.permission",
    "pk": 23,
    "fields": {
      "name": "Can delete log entry",
      "content_type": 6,
      "codename": "delete_logentry"
    }
  },
  {
    "model": "auth.permission",
    "pk": 24,
    "fields": {
      "name": "Can view log entry",
      "content_type": 6,
      "codename": "view_logentry"
    }
  },
  {
    "model": "auth.permission",
    "pk": 25,
    "fields": {
      "name": "Can add email address",
      "content_type": 7,
      "codename": "add_emailaddress"
    }
  },
  {
    "model": "auth.permission",
    "pk": 26,
    "fields": {
      "name": "Can change email address",
      "content_type": 7,
      "codename": "change_emailaddress"
    }
  },
  {
    "model": "auth.permission",
    "pk": 27,
    "fields": {
      "name": "Can delete email address",
      "content_type": 7,
      "codename": "delete_emailaddress"
    }
  },
  {
    "model": "auth.permission",
    "pk": 28,
    "fields": {
      "name": "Can view email address",
      "content_type": 7,
      "codename": "view_emailaddress"
    }
  },
  {
    "model": "auth.permission",
    "pk": 29,
    "fields": {
      "name": "Can add email confirmation",
      "content_type": 8,
      "codename": "add_emailconfirmation"
    }
  },
  {
    "model": "auth.permission",
    "pk": 30,
    "fields": {
      "name": "Can change email confirmation",
      "content_type": 8,
      "codename": "change_emailconfirmation"
    }
  },
  {
    "model": "auth.permission",
    "pk": 31,
    "fields": {
      "name": "Can delete email confirmation",
      "content_type": 8,
      "codename": "delete_emailconfirmation"
    }
  },
  {
    "model": "auth.permission",
    "pk": 32,
    "fields": {
      "name": "Can view email confirmation",
      "content_type": 8,
      "codename": "view_emailconfirmation"
    }
  },
  {
    "model": "auth.permission",
    "pk": 33,
    "fields": {
      "name": "Can add social account",
      "content_type": 9,
      "codename": "add_socialaccount"
    }
  },
  {
    "model": "auth.permission",
    "pk": 34,
    "fields": {
      "name": "Can change social account",
      "content_type": 9,
      "codename": "change_socialaccount"
    }
  },
  {
    "model": "auth.permission",
    "pk": 35,
    "fields": {
      "name": "Can delete social account",
      "content_type": 9,
      "codename": "delete_socialaccount"
    }
  },
  {
    "model": "auth.permission",
    "pk": 36,
    "fields": {
      "name": "Can view social account",
      "content_type": 9,
      "codename": "view_socialaccount"
    }
  },
  {
    "model": "auth.permission",
    "pk": 37,
    "fields": {
      "name": "Can add social application",
      "content_type": 10,
      "codename": "add_socialapp"
    }
  },
  {
    "model": "auth.permission",
    "pk": 38,
    "fields": {
      "name": "Can change social application",
      "content_type": 10,
      "codename": "change_socialapp"
    }
  },
  {
    "model": "auth.permission",
    "pk": 39,
    "fields": {
      "name": "Can delete social application",
      "content_type": 10,
      "codename": "delete_socialapp"
    }
  },
  {
    "model": "auth.permission",
    "pk": 40,
    "fields": {
      "name": "Can view social application",
      "content_type": 10,
      "codename": "view_socialapp"
    }
  },
  {
    "model": "auth.permission",
    "pk": 41,
    "fields": {
      "name": "Can add social application token",
      "content_type": 11,
      "codename": "add_socialtoken"
    }
  },
  {
    "model": "auth.permission",
    "pk": 42,
    "fields": {
      "name": "Can change social application token",
      "content_type": 11,
      "codename": "change_socialtoken"
    }
  },
  {
    "model": "auth.permission",
    "pk": 43,
    "fields": {
      "name": "Can delete social application token",
      "content_type": 11,
      "codename": "delete_socialtoken"
    }
  },
  {
    "model": "auth.permission",
    "pk": 44,
    "fields": {
      "name": "Can view social application token",
      "content_type": 11,
      "codename": "view_socialtoken"
    }
  },
  {
    "model": "auth.permission",
    "pk": 45,
    "fields": {
      "name": "Can add crontab",
      "content_type": 12,
      "codename": "add_crontabschedule"
    }
  },
  {
    "model": "auth.permission",
    "pk": 46,
    "fields": {
      "name": "Can change crontab",
      "content_type": 12,
      "codename": "change_crontabschedule"
    }
  },
  {
    "model": "auth.permission",
    "pk": 47,
    "fields": {
      "name": "Can delete crontab",
      "content_type": 12,
      "codename": "delete_crontabschedule"
    }
  },
  {
    "model": "auth.permission",
    "pk": 48,
    "fields": {
      "name": "Can view crontab",
      "content_type": 12,
      "codename": "view_crontabschedule"
    }
  },
  {
    "model": "auth.permission",
    "pk": 49,
    "fields": {
      "name": "Can add interval",
      "content_type": 13,
      "codename": "add_intervalschedule"
    }
  },
  {
    "model": "auth.permission",
    "pk": 50,
    "fields": {
      "name": "Can change interval",
      "content_type": 13,
      "codename": "change_intervalschedule"
    }
  },
  {
    "model": "auth.permission",
    "pk": 51,
    "fields": {
      "name": "Can delete interval",
      "content_type": 13,
      "codename": "delete_intervalschedule"
    }
  },
  {
    "model": "auth.permission",
    "pk": 52,
    "fields": {
      "name": "Can view interval",
      "content_type": 13,
      "codename": "view_intervalschedule"
    }
  },
  {
    "model": "auth.permission",
    "pk": 53,
    "fields": {
      "name": "Can add periodic task",
      "content_type": 14,
      "codename": "add_periodictask"
    }
  },
  {
    "model": "auth.permission",
    "pk": 54,
    "fields": {
      "name": "Can change periodic task",
      "content_type": 14,
      "codename": "change_periodictask"
    }
  },
  {
    "model": "auth.permission",
    "pk": 55,
    "fields": {
      "name": "Can delete periodic task",
      "content_type": 14,
      "codename": "delete_periodictask"
    }
  },
  {
    "model": "auth.permission",
    "pk": 56,
    "fields": {
      "name": "Can view periodic task",
      "content_type": 14,
      "codename": "view_periodictask"
    }
  },
  {
    "model": "auth.permission",
    "pk": 57,
    "fields": {
      "name": "Can add periodic tasks",
      "content_type": 15,
      "codename": "add_periodictasks"
    }
  },
  {
    "model": "auth.permission",
    "pk": 58,
    "fields": {
      "name": "Can change periodic tasks",
      "content_type": 15,
      "codename": "change_periodictasks"
    }
  },
  {
    "model": "auth.permission",
    "pk": 59,
    "fields": {
      "name": "Can delete periodic tasks",
      "content_type": 15,
      "codename": "delete_periodictasks"
    }
  },
  {
    "model": "auth.permission",
    "pk": 60,
    "fields": {
      "name": "Can view periodic tasks",
      "content_type": 15,
      "codename": "view_periodictasks"
    }
  },
  {
    "model": "auth.permission",
    "pk": 61,
    "fields": {
      "name": "Can add solar event",
      "content_type": 16,
      "codename": "add_solarschedule"
    }
  },
  {
    "model": "auth.permission",
    "pk": 62,
    "fields": {
      "name": "Can change solar event",
      "content_type": 16,
      "codename": "change_solarschedule"
    }
  },
  {
    "model": "auth.permission",
    "pk": 63,
    "fields": {
      "name": "Can delete solar event",
      "content_type": 16,
      "codename": "delete_solarschedule"
    }
  },
  {
    "model": "auth.permission",
    "pk": 64,
    "fields": {
      "name": "Can view solar event",
      "content_type": 16,
      "codename": "view_solarschedule"
    }
  },
  {
    "model": "auth.permission",
    "pk": 65,
    "fields": {
      "name": "Can add clocked",
      "content_type": 17,
      "codename": "add_clockedschedule"
    }
  },
  {
    "model": "auth.permission",
    "pk": 66,
    "fields": {
      "name": "Can change clocked",
      "content_type": 17,
      "codename": "change_clockedschedule"
    }
  },
  {
    "model": "auth.permission",
    "pk": 67,
    "fields": {
      "name": "Can delete clocked",
      "content_type": 17,
      "codename": "delete_clockedschedule"
    }
  },
  {
    "model": "auth.permission",
    "pk": 68,
    "fields": {
      "name": "Can view clocked",
      "content_type": 17,
      "codename": "view_clockedschedule"
    }
  },
  {
    "model": "auth.permission",
    "pk": 69,
    "fields": {
      "name": "Can add revision",
      "content_type": 18,
      "codename": "add_revision"
    }
  },
  {
    "model": "auth.permission",
    "pk": 70,
    "fields": {
      "name": "Can change revision",
      "content_type": 18,
      "codename": "change_revision"
    }
  },
  {
    "model": "auth.permission",
    "pk": 71,
    "fields": {
      "name": "Can delete revision",
      "content_type": 18,
      "codename": "delete_revision"
    }
  },
  {
    "model": "auth.permission",
    "pk": 72,
    "fields": {
      "name": "Can view revision",
      "content_type": 18,
      "codename": "view_revision"
    }
  },
  {
    "model": "auth.permission",
    "pk": 73,
    "fields": {
      "name": "Can add version",
      "content_type": 19,
      "codename": "add_version"
    }
  },
  {
    "model": "auth.permission",
    "pk": 74,
    "fields": {
      "name": "Can change version",
      "content_type": 19,
      "codename": "change_version"
    }
  },
  {
    "model": "auth.permission",
    "pk": 75,
    "fields": {
      "name": "Can delete version",
      "content_type": 19,
      "codename": "delete_version"
    }
  },
  {
    "model": "auth.permission",
    "pk": 76,
    "fields": {
      "name": "Can view version",
      "content_type": 19,
      "codename": "view_version"
    }
  },
  {
    "model": "auth.permission",
    "pk": 77,
    "fields": {
      "name": "Can add user",
      "content_type": 20,
      "codename": "add_user"
    }
  },
  {
    "model": "auth.permission",
    "pk": 78,
    "fields": {
      "name": "Can change user",
      "content_type": 20,
      "codename": "change_user"
    }
  },
  {
    "model": "auth.permission",
    "pk": 79,
    "fields": {
      "name": "Can delete user",
      "content_type": 20,
      "codename": "delete_user"
    }
  },
  {
    "model": "auth.permission",
    "pk": 80,
    "fields": {
      "name": "Can view user",
      "content_type": 20,
      "codename": "view_user"
    }
  },
  {
    "model": "auth.permission",
    "pk": 81,
    "fields": {
      "name": "Can add Cluster Config",
      "content_type": 21,
      "codename": "add_clusterconfig"
    }
  },
  {
    "model": "auth.permission",
    "pk": 82,
    "fields": {
      "name": "Can change Cluster Config",
      "content_type": 21,
      "codename": "change_clusterconfig"
    }
  },
  {
    "model": "auth.permission",
    "pk": 83,
    "fields": {
      "name": "Can delete Cluster Config",
      "content_type": 21,
      "codename": "delete_clusterconfig"
    }
  },
  {
    "model": "auth.permission",
    "pk": 84,
    "fields": {
      "name": "Can view Cluster Config",
      "content_type": 21,
      "codename": "view_clusterconfig"
    }
  },
  {
    "model": "auth.permission",
    "pk": 85,
    "fields": {
      "name": "Can add Resource Quota",
      "content_type": 22,
      "codename": "add_resourcequota"
    }
  },
  {
    "model": "auth.permission",
    "pk": 86,
    "fields": {
      "name": "Can change Resource Quota",
      "content_type": 22,
      "codename": "change_resourcequota"
    }
  },
  {
    "model": "auth.permission",
    "pk": 87,
    "fields": {
      "name": "Can delete Resource Quota",
      "content_type": 22,
      "codename": "delete_resourcequota"
    }
  },
  {
    "model": "auth.permission",
    "pk": 88,
    "fields": {
      "name": "Can view Resource Quota",
      "content_type": 22,
      "codename": "view_resourcequota"
    }
  },
  {
    "model": "auth.permission",
    "pk": 89,
    "fields": {
      "name": "Can add Organisation",
      "content_type": 23,
      "codename": "add_organisation"
    }
  },
  {
    "model": "auth.permission",
    "pk": 90,
    "fields": {
      "name": "Can change Organisation",
      "content_type": 23,
      "codename": "change_organisation"
    }
  },
  {
    "model": "auth.permission",
    "pk": 91,
    "fields": {
      "name": "Can delete Organisation",
      "content_type": 23,
      "codename": "delete_organisation"
    }
  },
  {
    "model": "auth.permission",
    "pk": 92,
    "fields": {
      "name": "Can view Organisation",
      "content_type": 23,
      "codename": "view_organisation"
    }
  },
  {
    "model": "auth.permission",
    "pk": 93,
    "fields": {
      "name": "Can add Organisation Quota",
      "content_type": 24,
      "codename": "add_organisationquota"
    }
  },
  {
    "model": "auth.permission",
    "pk": 94,
    "fields": {
      "name": "Can change Organisation Quota",
      "content_type": 24,
      "codename": "change_organisationquota"
    }
  },
  {
    "model": "auth.permission",
    "pk": 95,
    "fields": {
      "name": "Can delete Organisation Quota",
      "content_type": 24,
      "codename": "delete_organisationquota"
    }
  },
  {
    "model": "auth.permission",
    "pk": 96,
    "fields": {
      "name": "Can view Organisation Quota",
      "content_type": 24,
      "codename": "view_organisationquota"
    }
  },
  {
    "model": "auth.permission",
    "pk": 97,
    "fields": {
      "name": "Can add Administrator",
      "content_type": 25,
      "codename": "add_administrator"
    }
  },
  {
    "model": "auth.permission",
    "pk": 98,
    "fields": {
      "name": "Can change Administrator",
      "content_type": 25,
      "codename": "change_administrator"
    }
  },
  {
    "model": "auth.permission",
    "pk": 99,
    "fields": {
      "name": "Can delete Administrator",
      "content_type": 25,
      "codename": "delete_administrator"
    }
  },
  {
    "model": "auth.permission",
    "pk": 100,
    "fields": {
      "name": "Can view Administrator",
      "content_type": 25,
      "codename": "view_administrator"
    }
  },
  {
    "model": "auth.permission",
    "pk": 101,
    "fields": {
      "name": "Can view dashboard",
      "content_type": 25,
      "codename": "view_dashboard"
    }
  },
  {
    "model": "auth.permission",
    "pk": 102,
    "fields": {
      "name": "Can add Teacher",
      "content_type": 26,
      "codename": "add_teacher"
    }
  },
  {
    "model": "auth.permission",
    "pk": 103,
    "fields": {
      "name": "Can change Teacher",
      "content_type": 26,
      "codename": "change_teacher"
    }
  },
  {
    "model": "auth.permission",
    "pk": 104,
    "fields": {
      "name": "Can delete Teacher",
      "content_type": 26,
      "codename": "delete_teacher"
    }
  },
  {
    "model": "auth.permission",
    "pk": 105,
    "fields": {
      "name": "Can view Teacher",
      "content_type": 26,
      "codename": "view_teacher"
    }
  },
  {
    "model": "auth.permission",
    "pk": 106,
    "fields": {
      "name": "Can resend confirmation email to teacher",
      "content_type": 26,
      "codename": "teacher_resend_confirm_email"
    }
  },
  {
    "model": "auth.permission",
    "pk": 107,
    "fields": {
      "name": "Can add Student",
      "content_type": 27,
      "codename": "add_student"
    }
  },
  {
    "model": "auth.permission",
    "pk": 108,
    "fields": {
      "name": "Can change Student",
      "content_type": 27,
      "codename": "change_student"
    }
  },
  {
    "model": "auth.permission",
    "pk": 109,
    "fields": {
      "name": "Can delete Student",
      "content_type": 27,
      "codename": "delete_student"
    }
  },
  {
    "model": "auth.permission",
    "pk": 110,
    "fields": {
      "name": "Can view Student",
      "content_type": 27,
      "codename": "view_student"
    }
  },
  {
    "model": "auth.permission",
    "pk": 111,
    "fields": {
      "name": "Can resend confirmation email to student",
      "content_type": 27,
      "codename": "student_resend_confirm_email"
    }
  },
  {
    "model": "auth.permission",
    "pk": 112,
    "fields": {
      "name": "Can add Class",
      "content_type": 28,
      "codename": "add_class"
    }
  },
  {
    "model": "auth.permission",
    "pk": 113,
    "fields": {
      "name": "Can change Class",
      "content_type": 28,
      "codename": "change_class"
    }
  },
  {
    "model": "auth.permission",
    "pk": 114,
    "fields": {
      "name": "Can delete Class",
      "content_type": 28,
      "codename": "delete_class"
    }
  },
  {
    "model": "auth.permission",
    "pk": 115,
    "fields": {
      "name": "Can view Class",
      "content_type": 28,
      "codename": "view_class"
    }
  },
  {
    "model": "auth.permission",
    "pk": 116,
    "fields": {
      "name": "Can add App Category",
      "content_type": 29,
      "codename": "add_appcategory"
    }
  },
  {
    "model": "auth.permission",
    "pk": 117,
    "fields": {
      "name": "Can change App Category",
      "content_type": 29,
      "codename": "change_appcategory"
    }
  },
  {
    "model": "auth.permission",
    "pk": 118,
    "fields": {
      "name": "Can delete App Category",
      "content_type": 29,
      "codename": "delete_appcategory"
    }
  },
  {
    "model": "auth.permission",
    "pk": 119,
    "fields": {
      "name": "Can view App Category",
      "content_type": 29,
      "codename": "view_appcategory"
    }
  },
  {
    "model": "auth.permission",
    "pk": 120,
    "fields": {
      "name": "Can add App Template",
      "content_type": 30,
      "codename": "add_apptemplate"
    }
  },
  {
    "model": "auth.permission",
    "pk": 121,
    "fields": {
      "name": "Can change App Template",
      "content_type": 30,
      "codename": "change_apptemplate"
    }
  },
  {
    "model": "auth.permission",
    "pk": 122,
    "fields": {
      "name": "Can delete App Template",
      "content_type": 30,
      "codename": "delete_apptemplate"
    }
  },
  {
    "model": "auth.permission",
    "pk": 123,
    "fields": {
      "name": "Can view App Template",
      "content_type": 30,
      "codename": "view_apptemplate"
    }
  },
  {
    "model": "auth.permission",
    "pk": 124,
    "fields": {
      "name": "Can add App Template Key Value",
      "content_type": 31,
      "codename": "add_apptemplatekeyvalue"
    }
  },
  {
    "model": "auth.permission",
    "pk": 125,
    "fields": {
      "name": "Can change App Template Key Value",
      "content_type": 31,
      "codename": "change_apptemplatekeyvalue"
    }
  },
  {
    "model": "auth.permission",
    "pk": 126,
    "fields": {
      "name": "Can delete App Template Key Value",
      "content_type": 31,
      "codename": "delete_apptemplatekeyvalue"
    }
  },
  {
    "model": "auth.permission",
    "pk": 127,
    "fields": {
      "name": "Can view App Template Key Value",
      "content_type": 31,
      "codename": "view_apptemplatekeyvalue"
    }
  },
  {
    "model": "auth.permission",
    "pk": 128,
    "fields": {
      "name": "Can add App",
      "content_type": 32,
      "codename": "add_app"
    }
  },
  {
    "model": "auth.permission",
    "pk": 129,
    "fields": {
      "name": "Can change App",
      "content_type": 32,
      "codename": "change_app"
    }
  },
  {
    "model": "auth.permission",
    "pk": 130,
    "fields": {
      "name": "Can delete App",
      "content_type": 32,
      "codename": "delete_app"
    }
  },
  {
    "model": "auth.permission",
    "pk": 131,
    "fields": {
      "name": "Can view App",
      "content_type": 32,
      "codename": "view_app"
    }
  },
  {
    "model": "auth.permission",
    "pk": 132,
    "fields": {
      "name": "Can start an app",
      "content_type": 32,
      "codename": "start_app"
    }
  },
  {
    "model": "auth.permission",
    "pk": 133,
    "fields": {
      "name": "Can stop an app",
      "content_type": 32,
      "codename": "stop_app"
    }
  },
  {
    "model": "auth.permission",
    "pk": 134,
    "fields": {
      "name": "Can add Managed App",
      "content_type": 33,
      "codename": "add_managedapp"
    }
  },
  {
    "model": "auth.permission",
    "pk": 135,
    "fields": {
      "name": "Can change Managed App",
      "content_type": 33,
      "codename": "change_managedapp"
    }
  },
  {
    "model": "auth.permission",
    "pk": 136,
    "fields": {
      "name": "Can delete Managed App",
      "content_type": 33,
      "codename": "delete_managedapp"
    }
  },
  {
    "model": "auth.permission",
    "pk": 137,
    "fields": {
      "name": "Can view Managed App",
      "content_type": 33,
      "codename": "view_managedapp"
    }
  },
  {
    "model": "auth.group",
    "pk": 1,
    "fields": {
      "name": "Administrators",
      "permissions": [
        101, 112, 113, 114, 115, 92, 107, 108, 109, 111, 110, 102, 103, 104,
        106, 105
      ]
    }
  },
  {
    "model": "auth.group",
    "pk": 2,
    "fields": {
      "name": "Teachers",
      "permissions": [
        128, 129, 130, 132, 133, 131, 134, 135, 136, 137, 115, 107, 108, 109,
        111, 110, 105
      ]
    }
  },
  {
    "model": "auth.group",
    "pk": 3,
    "fields": {
      "name": "Students",
      "permissions": [128, 129, 130, 132, 133, 131, 110]
    }
  },
  {
    "model": "contenttypes.contenttype",
    "pk": 1,
    "fields": { "app_label": "auth", "model": "permission" }
  },
  {
    "model": "contenttypes.contenttype",
    "pk": 2,
    "fields": { "app_label": "auth", "model": "group" }
  },
  {
    "model": "contenttypes.contenttype",
    "pk": 3,
    "fields": { "app_label": "contenttypes", "model": "contenttype" }
  },
  {
    "model": "contenttypes.contenttype",
    "pk": 4,
    "fields": { "app_label": "sessions", "model": "session" }
  },
  {
    "model": "contenttypes.contenttype",
    "pk": 5,
    "fields": { "app_label": "sites", "model": "site" }
  },
  {
    "model": "contenttypes.contenttype",
    "pk": 6,
    "fields": { "app_label": "admin", "model": "logentry" }
  },
  {
    "model": "contenttypes.contenttype",
    "pk": 7,
    "fields": { "app_label": "account", "model": "emailaddress" }
  },
  {
    "model": "contenttypes.contenttype",
    "pk": 8,
    "fields": { "app_label": "account", "model": "emailconfirmation" }
  },
  {
    "model": "contenttypes.contenttype",
    "pk": 9,
    "fields": { "app_label": "socialaccount", "model": "socialaccount" }
  },
  {
    "model": "contenttypes.contenttype",
    "pk": 10,
    "fields": { "app_label": "socialaccount", "model": "socialapp" }
  },
  {
    "model": "contenttypes.contenttype",
    "pk": 11,
    "fields": { "app_label": "socialaccount", "model": "socialtoken" }
  },
  {
    "model": "contenttypes.contenttype",
    "pk": 12,
    "fields": { "app_label": "django_celery_beat", "model": "crontabschedule" }
  },
  {
    "model": "contenttypes.contenttype",
    "pk": 13,
    "fields": { "app_label": "django_celery_beat", "model": "intervalschedule" }
  },
  {
    "model": "contenttypes.contenttype",
    "pk": 14,
    "fields": { "app_label": "django_celery_beat", "model": "periodictask" }
  },
  {
    "model": "contenttypes.contenttype",
    "pk": 15,
    "fields": { "app_label": "django_celery_beat", "model": "periodictasks" }
  },
  {
    "model": "contenttypes.contenttype",
    "pk": 16,
    "fields": { "app_label": "django_celery_beat", "model": "solarschedule" }
  },
  {
    "model": "contenttypes.contenttype",
    "pk": 17,
    "fields": { "app_label": "django_celery_beat", "model": "clockedschedule" }
  },
  {
    "model": "contenttypes.contenttype",
    "pk": 18,
    "fields": { "app_label": "reversion", "model": "revision" }
  },
  {
    "model": "contenttypes.contenttype",
    "pk": 19,
    "fields": { "app_label": "reversion", "model": "version" }
  },
  {
    "model": "contenttypes.contenttype",
    "pk": 20,
    "fields": { "app_label": "users", "model": "user" }
  },
  {
    "model": "contenttypes.contenttype",
    "pk": 21,
    "fields": { "app_label": "cloud", "model": "clusterconfig" }
  },
  {
    "model": "contenttypes.contenttype",
    "pk": 22,
    "fields": { "app_label": "cloud", "model": "resourcequota" }
  },
  {
    "model": "contenttypes.contenttype",
    "pk": 23,
    "fields": { "app_label": "organisations", "model": "organisation" }
  },
  {
    "model": "contenttypes.contenttype",
    "pk": 24,
    "fields": { "app_label": "organisations", "model": "organisationquota" }
  },
  {
    "model": "contenttypes.contenttype",
    "pk": 25,
    "fields": { "app_label": "administrators", "model": "administrator" }
  },
  {
    "model": "contenttypes.contenttype",
    "pk": 26,
    "fields": { "app_label": "teachers", "model": "teacher" }
  },
  {
    "model": "contenttypes.contenttype",
    "pk": 27,
    "fields": { "app_label": "students", "model": "student" }
  },
  {
    "model": "contenttypes.contenttype",
    "pk": 28,
    "fields": { "app_label": "classes", "model": "class" }
  },
  {
    "model": "contenttypes.contenttype",
    "pk": 29,
    "fields": { "app_label": "apps", "model": "appcategory" }
  },
  {
    "model": "contenttypes.contenttype",
    "pk": 30,
    "fields": { "app_label": "apps", "model": "apptemplate" }
  },
  {
    "model": "contenttypes.contenttype",
    "pk": 31,
    "fields": { "app_label": "apps", "model": "apptemplatekeyvalue" }
  },
  {
    "model": "contenttypes.contenttype",
    "pk": 32,
    "fields": { "app_label": "apps", "model": "app" }
  },
  {
    "model": "contenttypes.contenttype",
    "pk": 33,
    "fields": { "app_label": "apps", "model": "managedapp" }
  },
  {
    "model": "sessions.session",
    "pk": "0bv9hj2mcdqv4d95s3vl0u5k7hjcvq80",
    "fields": {
      "session_data": ".eJxVjDsOwjAQBe_iGln-ZNc2JX3OYK1_OIAcKU4qxN1JpBTQvpl5b-ZpW6vfel78lNiVSXb53QLFZ24HSA9q95nHua3LFPih8JN2Ps4pv26n-3dQqde9BkVhcGClyRKoEIQBrBJkREiWNGand4ZoYpIO0aG0hKUYoTSBjop9vsaoNuw:1sKDDq:uuWZH4-baYRVbpXv8qsjs91HsS1irJwfppTplSW9Ykg",
      "expire_date": "2024-07-04T08:32:46.811Z"
    }
  },
  {
    "model": "sessions.session",
    "pk": "eqfrqycjxxfwexu45qwhz4s8p7x8ujqe",
    "fields": {
      "session_data": ".eJxVkMFuwyAQRP9lz5aFnRiwT1Xv_YKqQgssNa0DFmAlbeR_r51ElXLbmTc7K-0V0Ji4hKJwKSOF4g0WH4M6URmjzTC8X-E-wwAz5nyOyUIFWGBoRCN72Yn2UDMhZdPyCuiEftqiWDvM5aWQGUNq63mC9aOC2xW1ZErK74VHePI0mm8KO7BfGD5jbWIoyet6j9QPmuu3aGl6fWSfCkbM47bdE6I4OCttj_xoGHLNepStZUcnbCtES41E3jHTddrxnmvkjJFo9Ea1c3tpppz3R9Bl9ukHBlbB2f9isgrnWZlEWEjdHRiukAvNMIRlmqrbrCwW3MD6kM5PlO-aLiXhP1_XP5nehAY:1sKk0G:VWV6By_dmtoLDkXfh3UEWJflTXBXC8-ghZ47W6k3Smc",
      "expire_date": "2024-07-05T19:32:56.728Z"
    }
  },
  {
    "model": "sessions.session",
    "pk": "k1kdgc97f2qohg1a4wfy7e2gtqth7o8y",
    "fields": {
      "session_data": ".eJxVjDsOwjAQBe_iGln-ZNc2JX3OYK1_OIAcKU4qxN1JpBTQvpl5b-ZpW6vfel78lNiVSXb53QLFZ24HSA9q95nHua3LFPih8JN2Ps4pv26n-3dQqde9BkVhcGClyRKoEIQBrBJkREiWNGand4ZoYpIO0aG0hKUYoTSBjop9vsaoNuw:1sKHLv:qF5FqSjKpuY-SFL687tqdNgHMTZ1YiOVGGgHDC4_eZk",
      "expire_date": "2024-07-04T12:57:23.248Z"
    }
  },
  {
    "model": "sessions.session",
    "pk": "llibh63njaq398qk1p4pza0x84vhc1v5",
    "fields": {
      "session_data": ".eJxVkMFugzAQRP9lz8gyhGDgVPXeL6gqa22vi1tiI9soaSP-vRBQpdx25s3OSnsH1DrMPkuc80A-O43ZBS8vlIdgEvTvd9hn6GHClK4hGigAM_SlKNtO1K3o2KkUVVXWBdAF3bhGkVlM-SWTHnys2DTC8lHA44qcE0XptsIanjyF-pv8BswX-s_AdPA5OsW2CDtoYm_B0Ph6ZJ8KBkzDut0RojhZ05oOm1pzbBTvsK0Mr60wlRAVlS02Z67PZ2WbrlHYcE6iVCtV1m6liVLaHkG3ycUf6HkBV_eL0UicJqkjYSa5O9DfIWWaoPfzOBaPWRrMuILlkNaNlHZNtxzxny_LH5ehhAQ:1sKeMd:APdAMC-GhCvqhk8CDLUTJz31to8plCpfnbW3KqQzF8o",
      "expire_date": "2024-07-05T13:31:39.773Z"
    }
  },
  {
    "model": "sessions.session",
    "pk": "loyvqsjtpnk7oqarp79wxzf3e7ykdyuf",
    "fields": {
      "session_data": ".eJxVjEEOwiAURO_C2jRYW2i704uQAT4pkWBTaDSa3l3Uxujuz3vz58EUljyqJdGsvGUDa9jul2mYM8WXQAgvXMGYyxJz9e5sOlXHkihmb5D9JZ62r7-pEWksOz0B8uBsZ3uIxnAIzXt0teWNk7aWsqZ9B9Fy07baiV5oCM5J7nWx2rkyevV3zFZhmpSZCZnUh7DhwVKmiQ1xCWH3vpVFRhHrFp0PlD6ZbnnG16_rE1rgXUs:1sKHcd:tzu4tGH0JIJKIDN1Kqp-9ifZb9tiXEMaxkRfnr0g6os",
      "expire_date": "2024-07-04T13:14:39.188Z"
    }
  },
  {
    "model": "sessions.session",
    "pk": "wj2vwk45k7t44io2b5i76cjqr5gf4681",
    "fields": {
      "session_data": ".eJxVjEEOwiAUBe_CuiFAS4Eu3XsG8oFfi1Yw0BqN8e7apAvdvpk3L2JhXSa7Viw2BjIQQZrfzYG_YNpAOEM6ZepzWkp0dFPoTis95oDzYXf_AhPU6fsGHPvecakZkyqAgY6BEswxpTW2TrZSgRFCeOk9Dz1qw7UXRgMzXAXXbdGKtcacLD5usTzJwBoC3uc1LfaOJY4Rg8UrxJkMaZ3n9wdqtUnj:1sKDMS:tRUc7gD8Nie5pTLGlAJcKa4KvMrKcNYoA2BMG8MIEiA",
      "expire_date": "2024-07-04T08:41:40.549Z"
    }
  },
  {
    "model": "sites.site",
    "pk": 1,
    "fields": { "domain": "classlab.pl", "name": "ClassLab" }
  },
  {
    "model": "admin.logentry",
    "pk": 1,
    "fields": {
      "action_time": "2024-06-20T08:35:34.485Z",
      "user": 1,
      "content_type": 23,
      "object_id": "1",
      "object_repr": "Technikum nr. 2",
      "action_flag": 1,
      "change_message": "[{\"added\": {}}]"
    }
  },
  {
    "model": "admin.logentry",
    "pk": 2,
    "fields": {
      "action_time": "2024-06-20T08:36:40.067Z",
      "user": 1,
      "content_type": 20,
      "object_id": "2",
      "object_repr": "admin@technr2.pl",
      "action_flag": 1,
      "change_message": "[{\"added\": {}}]"
    }
  },
  {
    "model": "admin.logentry",
    "pk": 3,
    "fields": {
      "action_time": "2024-06-20T08:36:48.502Z",
      "user": 1,
      "content_type": 20,
      "object_id": "2",
      "object_repr": "admin@technr2.pl",
      "action_flag": 2,
      "change_message": "[{\"changed\": {\"fields\": [\"Groups\"]}}]"
    }
  },
  {
    "model": "admin.logentry",
    "pk": 4,
    "fields": {
      "action_time": "2024-06-20T08:36:59.638Z",
      "user": 1,
      "content_type": 25,
      "object_id": "1",
      "object_repr": "Jan Kowalski",
      "action_flag": 1,
      "change_message": "[{\"added\": {}}]"
    }
  },
  {
    "model": "admin.logentry",
    "pk": 5,
    "fields": {
      "action_time": "2024-06-20T12:57:43.925Z",
      "user": 1,
      "content_type": 29,
      "object_id": "1",
      "object_repr": "Test",
      "action_flag": 1,
      "change_message": "[{\"added\": {}}]"
    }
  },
  {
    "model": "admin.logentry",
    "pk": 6,
    "fields": {
      "action_time": "2024-06-20T12:57:57.531Z",
      "user": 1,
      "content_type": 30,
      "object_id": "1",
      "object_repr": "Hello World",
      "action_flag": 1,
      "change_message": "[{\"added\": {}}]"
    }
  },
  {
    "model": "admin.logentry",
    "pk": 7,
    "fields": {
      "action_time": "2024-06-20T12:58:07.634Z",
      "user": 1,
      "content_type": 30,
      "object_id": "1",
      "object_repr": "Hello World",
      "action_flag": 2,
      "change_message": "[]"
    }
  },
  {
    "model": "admin.logentry",
    "pk": 8,
    "fields": {
      "action_time": "2024-06-20T13:03:57.639Z",
      "user": 1,
      "content_type": 21,
      "object_id": "1",
      "object_repr": "Technikum nr 2",
      "action_flag": 1,
      "change_message": "[{\"added\": {}}]"
    }
  },
  {
    "model": "admin.logentry",
    "pk": 9,
    "fields": {
      "action_time": "2024-06-20T13:06:30.526Z",
      "user": 1,
      "content_type": 30,
      "object_id": "1",
      "object_repr": "Hello World",
      "action_flag": 2,
      "change_message": "[{\"changed\": {\"fields\": [\"manifest\"]}}]"
    }
  },
  {
    "model": "admin.logentry",
    "pk": 10,
    "fields": {
      "action_time": "2024-06-20T13:13:18.144Z",
      "user": 1,
      "content_type": 30,
      "object_id": "1",
      "object_repr": "Hello World",
      "action_flag": 2,
      "change_message": "[{\"changed\": {\"fields\": [\"manifest\"]}}]"
    }
  },
  {
    "model": "admin.logentry",
    "pk": 11,
    "fields": {
      "action_time": "2024-06-21T13:04:37.640Z",
      "user": 1,
      "content_type": 21,
      "object_id": "1",
      "object_repr": "Technikum nr 2",
      "action_flag": 2,
      "change_message": "[]"
    }
  },
  {
    "model": "admin.logentry",
    "pk": 12,
    "fields": {
      "action_time": "2024-06-21T13:22:54.349Z",
      "user": 1,
      "content_type": 30,
      "object_id": "1",
      "object_repr": "Whoami",
      "action_flag": 2,
      "change_message": "[{\"changed\": {\"fields\": [\"Name\", \"manifest\"]}}]"
    }
  },
  {
    "model": "admin.logentry",
    "pk": 13,
    "fields": {
      "action_time": "2024-06-21T13:27:13.481Z",
      "user": 1,
      "content_type": 30,
      "object_id": "1",
      "object_repr": "Whoami",
      "action_flag": 2,
      "change_message": "[{\"changed\": {\"fields\": [\"manifest\"]}}]"
    }
  },
  {
    "model": "admin.logentry",
    "pk": 14,
    "fields": {
      "action_time": "2024-06-21T13:29:34.856Z",
      "user": 1,
      "content_type": 30,
      "object_id": "1",
      "object_repr": "Whoami",
      "action_flag": 2,
      "change_message": "[{\"changed\": {\"fields\": [\"manifest\"]}}]"
    }
  },
  {
    "model": "admin.logentry",
    "pk": 15,
    "fields": {
      "action_time": "2024-06-21T13:31:28.741Z",
      "user": 1,
      "content_type": 30,
      "object_id": "1",
      "object_repr": "Whoami",
      "action_flag": 2,
      "change_message": "[{\"changed\": {\"fields\": [\"manifest\"]}}]"
    }
  },
  {
    "model": "admin.logentry",
    "pk": 16,
    "fields": {
      "action_time": "2024-06-21T16:01:39.485Z",
      "user": 1,
      "content_type": 30,
      "object_id": "1",
      "object_repr": "Whoami",
      "action_flag": 2,
      "change_message": "[{\"changed\": {\"fields\": [\"manifest\"]}}]"
    }
  },
  {
    "model": "admin.logentry",
    "pk": 17,
    "fields": {
      "action_time": "2024-06-21T19:02:30.058Z",
      "user": 1,
      "content_type": 29,
      "object_id": "2",
      "object_repr": "Data Science",
      "action_flag": 1,
      "change_message": "[{\"added\": {}}]"
    }
  },
  {
    "model": "admin.logentry",
    "pk": 18,
    "fields": {
      "action_time": "2024-06-21T19:02:58.695Z",
      "user": 1,
      "content_type": 30,
      "object_id": "2",
      "object_repr": "Jupyterlab",
      "action_flag": 1,
      "change_message": "[{\"added\": {}}]"
    }
  },
  {
    "model": "admin.logentry",
    "pk": 19,
    "fields": {
      "action_time": "2024-06-21T19:08:31.546Z",
      "user": 1,
      "content_type": 30,
      "object_id": "2",
      "object_repr": "Jupyterlab",
      "action_flag": 2,
      "change_message": "[{\"changed\": {\"fields\": [\"manifest\"]}}]"
    }
  },
  {
    "model": "admin.logentry",
    "pk": 20,
    "fields": {
      "action_time": "2024-06-21T19:10:59.876Z",
      "user": 1,
      "content_type": 30,
      "object_id": "2",
      "object_repr": "Jupyterlab",
      "action_flag": 2,
      "change_message": "[{\"changed\": {\"fields\": [\"manifest\"]}}]"
    }
  },
  {
    "model": "admin.logentry",
    "pk": 21,
    "fields": {
      "action_time": "2024-06-21T19:12:40.658Z",
      "user": 1,
      "content_type": 30,
      "object_id": "2",
      "object_repr": "Jupyterlab",
      "action_flag": 2,
      "change_message": "[{\"changed\": {\"fields\": [\"manifest\"]}}]"
    }
  },
  {
    "model": "admin.logentry",
    "pk": 22,
    "fields": {
      "action_time": "2024-06-21T19:14:02.356Z",
      "user": 1,
      "content_type": 30,
      "object_id": "2",
      "object_repr": "Jupyterlab",
      "action_flag": 2,
      "change_message": "[{\"changed\": {\"fields\": [\"manifest\"]}}]"
    }
  },
  {
    "model": "admin.logentry",
    "pk": 23,
    "fields": {
      "action_time": "2024-06-21T19:15:13.257Z",
      "user": 1,
      "content_type": 30,
      "object_id": "2",
      "object_repr": "Jupyterlab",
      "action_flag": 2,
      "change_message": "[{\"changed\": {\"fields\": [\"manifest\"]}}]"
    }
  },
  {
    "model": "admin.logentry",
    "pk": 24,
    "fields": {
      "action_time": "2024-06-21T19:22:09.460Z",
      "user": 1,
      "content_type": 30,
      "object_id": "2",
      "object_repr": "Jupyterlab",
      "action_flag": 2,
      "change_message": "[{\"changed\": {\"fields\": [\"manifest\"]}}]"
    }
  },
  {
    "model": "admin.logentry",
    "pk": 25,
    "fields": {
      "action_time": "2024-06-21T19:32:37.215Z",
      "user": 1,
      "content_type": 29,
      "object_id": "3",
      "object_repr": "Developer",
      "action_flag": 1,
      "change_message": "[{\"added\": {}}]"
    }
  },
  {
    "model": "admin.logentry",
    "pk": 26,
    "fields": {
      "action_time": "2024-06-21T19:32:42.790Z",
      "user": 1,
      "content_type": 30,
      "object_id": "3",
      "object_repr": "VS Code",
      "action_flag": 1,
      "change_message": "[{\"added\": {}}]"
    }
  },
  {
    "model": "account.emailaddress",
    "pk": 1,
    "fields": {
      "user": 3,
      "email": "s.batory@technr2.pl",
      "verified": false,
      "primary": true
    }
  },
  {
    "model": "account.emailaddress",
    "pk": 2,
    "fields": {
      "user": 4,
      "email": "a.fast@technr2.pl",
      "verified": true,
      "primary": true
    }
  },
  {
    "model": "account.emailaddress",
    "pk": 3,
    "fields": {
      "user": 5,
      "email": "j.boberek@technr2.pl",
      "verified": false,
      "primary": true
    }
  },
  {
    "model": "django_celery_beat.crontabschedule",
    "pk": 1,
    "fields": {
      "minute": "0",
      "hour": "4",
      "day_of_month": "*",
      "month_of_year": "*",
      "day_of_week": "*",
      "timezone": "Europe/Warsaw"
    }
  },
  {
    "model": "django_celery_beat.periodictasks",
    "pk": 1,
    "fields": { "last_update": "2024-06-21T19:35:11.828Z" }
  },
  {
    "model": "django_celery_beat.periodictask",
    "pk": 1,
    "fields": {
      "name": "celery.backend_cleanup",
      "task": "celery.backend_cleanup",
      "interval": null,
      "crontab": 1,
      "solar": null,
      "clocked": null,
      "args": "[]",
      "kwargs": "{}",
      "queue": null,
      "exchange": null,
      "routing_key": null,
      "headers": "{}",
      "priority": null,
      "expires": null,
      "expire_seconds": 43200,
      "one_off": false,
      "start_time": null,
      "enabled": true,
      "last_run_at": null,
      "total_run_count": 0,
      "date_changed": "2024-06-21T19:35:11.827Z",
      "description": ""
    }
  },
  {
    "model": "reversion.revision",
    "pk": 1,
    "fields": {
      "date_created": "2024-06-20T12:57:57.495Z",
      "user": 1,
      "comment": "Dodano."
    }
  },
  {
    "model": "reversion.revision",
    "pk": 2,
    "fields": {
      "date_created": "2024-06-20T12:58:07.624Z",
      "user": 1,
      "comment": "Żadne pole nie zostało zmienione."
    }
  },
  {
    "model": "reversion.revision",
    "pk": 3,
    "fields": {
      "date_created": "2024-06-20T13:06:30.492Z",
      "user": 1,
      "comment": "Zmodyfikowano manifest."
    }
  },
  {
    "model": "reversion.revision",
    "pk": 4,
    "fields": {
      "date_created": "2024-06-20T13:13:18.120Z",
      "user": 1,
      "comment": "Zmodyfikowano manifest."
    }
  },
  {
    "model": "reversion.revision",
    "pk": 5,
    "fields": {
      "date_created": "2024-06-21T13:22:54.163Z",
      "user": 1,
      "comment": "Changed Name and manifest."
    }
  },
  {
    "model": "reversion.revision",
    "pk": 6,
    "fields": {
      "date_created": "2024-06-21T13:27:13.432Z",
      "user": 1,
      "comment": "Changed manifest."
    }
  },
  {
    "model": "reversion.revision",
    "pk": 7,
    "fields": {
      "date_created": "2024-06-21T13:29:34.828Z",
      "user": 1,
      "comment": "Changed manifest."
    }
  },
  {
    "model": "reversion.revision",
    "pk": 8,
    "fields": {
      "date_created": "2024-06-21T13:31:28.724Z",
      "user": 1,
      "comment": "Changed manifest."
    }
  },
  {
    "model": "reversion.revision",
    "pk": 9,
    "fields": {
      "date_created": "2024-06-21T16:01:39.445Z",
      "user": 1,
      "comment": "Changed manifest."
    }
  },
  {
    "model": "reversion.revision",
    "pk": 10,
    "fields": {
      "date_created": "2024-06-21T19:02:58.570Z",
      "user": 1,
      "comment": "Added."
    }
  },
  {
    "model": "reversion.revision",
    "pk": 11,
    "fields": {
      "date_created": "2024-06-21T19:08:31.526Z",
      "user": 1,
      "comment": "Changed manifest."
    }
  },
  {
    "model": "reversion.revision",
    "pk": 12,
    "fields": {
      "date_created": "2024-06-21T19:10:59.862Z",
      "user": 1,
      "comment": "Changed manifest."
    }
  },
  {
    "model": "reversion.revision",
    "pk": 13,
    "fields": {
      "date_created": "2024-06-21T19:12:40.646Z",
      "user": 1,
      "comment": "Changed manifest."
    }
  },
  {
    "model": "reversion.revision",
    "pk": 14,
    "fields": {
      "date_created": "2024-06-21T19:14:02.343Z",
      "user": 1,
      "comment": "Changed manifest."
    }
  },
  {
    "model": "reversion.revision",
    "pk": 15,
    "fields": {
      "date_created": "2024-06-21T19:15:13.242Z",
      "user": 1,
      "comment": "Changed manifest."
    }
  },
  {
    "model": "reversion.revision",
    "pk": 16,
    "fields": {
      "date_created": "2024-06-21T19:22:09.446Z",
      "user": 1,
      "comment": "Changed manifest."
    }
  },
  {
    "model": "reversion.revision",
    "pk": 17,
    "fields": {
      "date_created": "2024-06-21T19:32:42.771Z",
      "user": 1,
      "comment": "Added."
    }
  },
  {
    "model": "reversion.version",
    "pk": 1,
    "fields": {
      "revision": 1,
      "object_id": "1",
      "content_type": 30,
      "db": "default",
      "format": "json",
      "serialized_data": "[{\"model\": \"apps.apptemplate\", \"pk\": 1, \"fields\": {\"template_id\": \"rqx26whuo4oj\", \"name\": \"Hello World\", \"category\": 1, \"expose_node_port\": false, \"run_command_template\": \"\", \"managed\": false, \"manifest\": \"---\\r\\napiVersion: apps/v1\\r\\nkind: Deployment\\r\\nmetadata:\\r\\n  namespace: technr2\\r\\n  name: hello-world\\r\\n  labels:\\r\\n    app: hello-world\\r\\n    user: jankow\\r\\nspec:\\r\\n  replicas: 1\\r\\n  selector:\\r\\n    matchLabels:\\r\\n      app: hello-world\\r\\n      user: jankow\\r\\n  strategy:\\r\\n    type: Recreate\\r\\n  template:\\r\\n    metadata:\\r\\n      labels:\\r\\n        app: hello-world\\r\\n        user: jankow\\r\\n    spec:\\r\\n      securityContext:\\r\\n        runAsUser: 1000\\r\\n        runAsGroup: 3000\\r\\n        fsGroup: 2000\\r\\n        seccompProfile:\\r\\n          type: RuntimeDefault\\r\\n        runAsNonRoot: true\\r\\n      containers:\\r\\n        - name: hello-world\\r\\n          image: crccheck/hello-world\\r\\n          ports:\\r\\n            - containerPort: 80\\r\\n              name: hello-world\\r\\n          livenessProbe:\\r\\n            exec:\\r\\n              command:\\r\\n                - curl\\r\\n                - -f\\r\\n                - http://localhost:80/\\r\\n            initialDelaySeconds: 5\\r\\n            periodSeconds: 10\\r\\n            timeoutSeconds: 1\\r\\n            failureThreshold: 3\\r\\n            successThreshold: 1\\r\\n          readinessProbe:\\r\\n            exec:\\r\\n              command:\\r\\n                - curl\\r\\n                - -f\\r\\n                - http://localhost:80/\\r\\n            initialDelaySeconds: 5\\r\\n            periodSeconds: 10\\r\\n            timeoutSeconds: 1\\r\\n            failureThreshold: 3\\r\\n            successThreshold: 1\\r\\n          startupProbe:\\r\\n            exec:\\r\\n              command:\\r\\n                - curl\\r\\n                - -f\\r\\n                - http://localhost:80/\\r\\n            initialDelaySeconds: 15\\r\\n            periodSeconds: 10\\r\\n            timeoutSeconds: 1\\r\\n            failureThreshold: 10\\r\\n            successThreshold: 1\\r\\n          securityContext:\\r\\n            allowPrivilegeEscalation: false\\r\\n            runAsNonRoot: true\\r\\n            capabilities:\\r\\n              drop:\\r\\n                - ALL\\r\\n          resources:\\r\\n            limits:\\r\\n              cpu: \\\"600m\\\"\\r\\n              ephemeral-storage: \\\"1Gi\\\"\\r\\n              memory: \\\"500Mi\\\"\\r\\n            requests:\\r\\n              cpu: \\\"100m\\\"\\r\\n              ephemeral-storage: \\\"1Gi\\\"\\r\\n              memory: \\\"400Mi\\\"\\r\\n      \\r\\n---\\r\\napiVersion: v1\\r\\nkind: Service\\r\\nmetadata:\\r\\n  namespace: technr2\\r\\n  name: hello-world\\r\\n  labels:\\r\\n    app: hello-world\\r\\n    user: jankow\\r\\nspec:\\r\\n  ports:\\r\\n    - protocol: TCP\\r\\n      port: 80\\r\\n      targetPort: 80\\r\\n  selector:\\r\\n    app: hello-world\\r\\n    user: jankow\\r\\n\\r\\n---\\r\\napiVersion: networking.k8s.io/v1\\r\\nkind: NetworkPolicy\\r\\nmetadata:\\r\\n  name: hello-world\\r\\n  namespace: technr2\\r\\n  labels:\\r\\n    app: hello-world\\r\\n    user: jankow\\r\\nspec:\\r\\n  podSelector:\\r\\n    matchLabels:\\r\\n      app: hello-world\\r\\n      user: jankow\\r\\n  policyTypes:\\r\\n    - Ingress\\r\\n    - Egress\\r\\n  ingress:\\r\\n    - {}\\r\\n  egress:\\r\\n    - {}\\r\\n\\r\\n\\r\\n---\\r\\napiVersion: keda.sh/v1alpha1\\r\\nkind: ScaledObject\\r\\nmetadata:\\r\\n  name: hello-world\\r\\n  namespace: technr2\\r\\nspec:\\r\\n  scaleTargetRef:\\r\\n    name: hello-world\\r\\n  pollingInterval: 15\\r\\n  cooldownPeriod: 600\\r\\n  minReplicaCount: 0\\r\\n  maxReplicaCount: 1\\r\\n  advanced:\\r\\n    horizontalPodAutoscalerConfig:\\r\\n      behavior:\\r\\n        scaleDown:\\r\\n          stabilizationWindowSeconds: 600\\r\\n          policies:\\r\\n          - type: Percent\\r\\n            value: 100\\r\\n            periodSeconds: 15\\r\\n        scaleUp:\\r\\n          selectPolicy: Disabled\\r\\n  triggers:\\r\\n    - type: prometheus\\r\\n      metricType: Value\\r\\n      metadata:\\r\\n        serverAddress: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090\\r\\n        query: max(max(sum(rate(container_fs_reads_total{container!=\\\"\\\",job=\\\"kubelet\\\",metrics_path=\\\"/metrics/cadvisor\\\",pod=~\\\"hello-world.*\\\"}[2m30s])+rate(container_fs_writes_total{container!=\\\"\\\",job=\\\"kubelet\\\",metrics_path=\\\"/metrics/cadvisor\\\",pod=~\\\"hello-world.*\\\"}[2m30s]))) * 100 > bool 10 or (time() - kube_pod_created{pod=~\\\"hello-world.*\\\", namespace=\\\"technr2\\\"} < bool 300))\\r\\n        threshold: \\\"1\\\"\\r\\n        ignoreNullValues: \\\"false\\\"\", \"description\": \"Hello world app for testing\", \"created_at\": \"2024-06-20T12:57:57.502Z\", \"updated_at\": \"2024-06-20T12:57:57.502Z\", \"organisations\": [1]}}]",
      "object_repr": "Hello World"
    }
  },
  {
    "model": "reversion.version",
    "pk": 2,
    "fields": {
      "revision": 2,
      "object_id": "1",
      "content_type": 30,
      "db": "default",
      "format": "json",
      "serialized_data": "[{\"model\": \"apps.apptemplate\", \"pk\": 1, \"fields\": {\"template_id\": \"rqx26whuo4oj\", \"name\": \"Hello World\", \"category\": 1, \"expose_node_port\": false, \"run_command_template\": \"\", \"managed\": false, \"manifest\": \"---\\r\\napiVersion: apps/v1\\r\\nkind: Deployment\\r\\nmetadata:\\r\\n  namespace: technr2\\r\\n  name: hello-world\\r\\n  labels:\\r\\n    app: hello-world\\r\\n    user: jankow\\r\\nspec:\\r\\n  replicas: 1\\r\\n  selector:\\r\\n    matchLabels:\\r\\n      app: hello-world\\r\\n      user: jankow\\r\\n  strategy:\\r\\n    type: Recreate\\r\\n  template:\\r\\n    metadata:\\r\\n      labels:\\r\\n        app: hello-world\\r\\n        user: jankow\\r\\n    spec:\\r\\n      securityContext:\\r\\n        runAsUser: 1000\\r\\n        runAsGroup: 3000\\r\\n        fsGroup: 2000\\r\\n        seccompProfile:\\r\\n          type: RuntimeDefault\\r\\n        runAsNonRoot: true\\r\\n      containers:\\r\\n        - name: hello-world\\r\\n          image: crccheck/hello-world\\r\\n          ports:\\r\\n            - containerPort: 80\\r\\n              name: hello-world\\r\\n          livenessProbe:\\r\\n            exec:\\r\\n              command:\\r\\n                - curl\\r\\n                - -f\\r\\n                - http://localhost:80/\\r\\n            initialDelaySeconds: 5\\r\\n            periodSeconds: 10\\r\\n            timeoutSeconds: 1\\r\\n            failureThreshold: 3\\r\\n            successThreshold: 1\\r\\n          readinessProbe:\\r\\n            exec:\\r\\n              command:\\r\\n                - curl\\r\\n                - -f\\r\\n                - http://localhost:80/\\r\\n            initialDelaySeconds: 5\\r\\n            periodSeconds: 10\\r\\n            timeoutSeconds: 1\\r\\n            failureThreshold: 3\\r\\n            successThreshold: 1\\r\\n          startupProbe:\\r\\n            exec:\\r\\n              command:\\r\\n                - curl\\r\\n                - -f\\r\\n                - http://localhost:80/\\r\\n            initialDelaySeconds: 15\\r\\n            periodSeconds: 10\\r\\n            timeoutSeconds: 1\\r\\n            failureThreshold: 10\\r\\n            successThreshold: 1\\r\\n          securityContext:\\r\\n            allowPrivilegeEscalation: false\\r\\n            runAsNonRoot: true\\r\\n            capabilities:\\r\\n              drop:\\r\\n                - ALL\\r\\n          resources:\\r\\n            limits:\\r\\n              cpu: \\\"600m\\\"\\r\\n              ephemeral-storage: \\\"1Gi\\\"\\r\\n              memory: \\\"500Mi\\\"\\r\\n            requests:\\r\\n              cpu: \\\"100m\\\"\\r\\n              ephemeral-storage: \\\"1Gi\\\"\\r\\n              memory: \\\"400Mi\\\"\\r\\n      \\r\\n---\\r\\napiVersion: v1\\r\\nkind: Service\\r\\nmetadata:\\r\\n  namespace: technr2\\r\\n  name: hello-world\\r\\n  labels:\\r\\n    app: hello-world\\r\\n    user: jankow\\r\\nspec:\\r\\n  ports:\\r\\n    - protocol: TCP\\r\\n      port: 80\\r\\n      targetPort: 80\\r\\n  selector:\\r\\n    app: hello-world\\r\\n    user: jankow\\r\\n\\r\\n---\\r\\napiVersion: networking.k8s.io/v1\\r\\nkind: NetworkPolicy\\r\\nmetadata:\\r\\n  name: hello-world\\r\\n  namespace: technr2\\r\\n  labels:\\r\\n    app: hello-world\\r\\n    user: jankow\\r\\nspec:\\r\\n  podSelector:\\r\\n    matchLabels:\\r\\n      app: hello-world\\r\\n      user: jankow\\r\\n  policyTypes:\\r\\n    - Ingress\\r\\n    - Egress\\r\\n  ingress:\\r\\n    - {}\\r\\n  egress:\\r\\n    - {}\\r\\n\\r\\n\\r\\n---\\r\\napiVersion: keda.sh/v1alpha1\\r\\nkind: ScaledObject\\r\\nmetadata:\\r\\n  name: hello-world\\r\\n  namespace: technr2\\r\\nspec:\\r\\n  scaleTargetRef:\\r\\n    name: hello-world\\r\\n  pollingInterval: 15\\r\\n  cooldownPeriod: 600\\r\\n  minReplicaCount: 0\\r\\n  maxReplicaCount: 1\\r\\n  advanced:\\r\\n    horizontalPodAutoscalerConfig:\\r\\n      behavior:\\r\\n        scaleDown:\\r\\n          stabilizationWindowSeconds: 600\\r\\n          policies:\\r\\n          - type: Percent\\r\\n            value: 100\\r\\n            periodSeconds: 15\\r\\n        scaleUp:\\r\\n          selectPolicy: Disabled\\r\\n  triggers:\\r\\n    - type: prometheus\\r\\n      metricType: Value\\r\\n      metadata:\\r\\n        serverAddress: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090\\r\\n        query: max(max(sum(rate(container_fs_reads_total{container!=\\\"\\\",job=\\\"kubelet\\\",metrics_path=\\\"/metrics/cadvisor\\\",pod=~\\\"hello-world.*\\\"}[2m30s])+rate(container_fs_writes_total{container!=\\\"\\\",job=\\\"kubelet\\\",metrics_path=\\\"/metrics/cadvisor\\\",pod=~\\\"hello-world.*\\\"}[2m30s]))) * 100 > bool 10 or (time() - kube_pod_created{pod=~\\\"hello-world.*\\\", namespace=\\\"technr2\\\"} < bool 300))\\r\\n        threshold: \\\"1\\\"\\r\\n        ignoreNullValues: \\\"false\\\"\", \"description\": \"Hello world app for testing\", \"created_at\": \"2024-06-20T12:57:57.502Z\", \"updated_at\": \"2024-06-20T12:58:07.631Z\", \"organisations\": [1]}}]",
      "object_repr": "Hello World"
    }
  },
  {
    "model": "reversion.version",
    "pk": 3,
    "fields": {
      "revision": 3,
      "object_id": "1",
      "content_type": 30,
      "db": "default",
      "format": "json",
      "serialized_data": "[{\"model\": \"apps.apptemplate\", \"pk\": 1, \"fields\": {\"template_id\": \"rqx26whuo4oj\", \"name\": \"Hello World\", \"category\": 1, \"expose_node_port\": false, \"run_command_template\": \"\", \"managed\": false, \"manifest\": \"---\\r\\napiVersion: apps/v1\\r\\nkind: Deployment\\r\\nmetadata:\\r\\n  namespace: technr2\\r\\n  name: hello-world\\r\\n  labels:\\r\\n    app: hello-world\\r\\n    user: jankow\\r\\nspec:\\r\\n  replicas: 1\\r\\n  selector:\\r\\n    matchLabels:\\r\\n      app: hello-world\\r\\n      user: jankow\\r\\n  strategy:\\r\\n    type: Recreate\\r\\n  template:\\r\\n    metadata:\\r\\n      labels:\\r\\n        app: hello-world\\r\\n        user: jankow\\r\\n    spec:\\r\\n      containers:\\r\\n        - name: hello-world\\r\\n          image: crccheck/hello-world\\r\\n          ports:\\r\\n            - containerPort: 80\\r\\n              name: hello-world\\r\\n---\\r\\napiVersion: v1\\r\\nkind: Service\\r\\nmetadata:\\r\\n  namespace: technr2\\r\\n  name: hello-world\\r\\n  labels:\\r\\n    app: hello-world\\r\\n    user: jankow\\r\\nspec:\\r\\n  ports:\\r\\n    - protocol: TCP\\r\\n      port: 80\\r\\n      targetPort: 80\\r\\n  selector:\\r\\n    app: hello-world\\r\\n    user: jankow\\r\\n\\r\\n---\\r\\napiVersion: keda.sh/v1alpha1\\r\\nkind: ScaledObject\\r\\nmetadata:\\r\\n  name: hello-world\\r\\n  namespace: technr2\\r\\nspec:\\r\\n  scaleTargetRef:\\r\\n    name: hello-world\\r\\n  pollingInterval: 15\\r\\n  cooldownPeriod: 600\\r\\n  minReplicaCount: 0\\r\\n  maxReplicaCount: 1\\r\\n  advanced:\\r\\n    horizontalPodAutoscalerConfig:\\r\\n      behavior:\\r\\n        scaleDown:\\r\\n          stabilizationWindowSeconds: 600\\r\\n          policies:\\r\\n          - type: Percent\\r\\n            value: 100\\r\\n            periodSeconds: 15\\r\\n        scaleUp:\\r\\n          selectPolicy: Disabled\\r\\n  triggers:\\r\\n    - type: prometheus\\r\\n      metricType: Value\\r\\n      metadata:\\r\\n        serverAddress: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090\\r\\n        query: max(max(sum(rate(container_fs_reads_total{container!=\\\"\\\",job=\\\"kubelet\\\",metrics_path=\\\"/metrics/cadvisor\\\",pod=~\\\"hello-world.*\\\"}[2m30s])+rate(container_fs_writes_total{container!=\\\"\\\",job=\\\"kubelet\\\",metrics_path=\\\"/metrics/cadvisor\\\",pod=~\\\"hello-world.*\\\"}[2m30s]))) * 100 > bool 10 or (time() - kube_pod_created{pod=~\\\"hello-world.*\\\", namespace=\\\"technr2\\\"} < bool 300))\\r\\n        threshold: \\\"1\\\"\\r\\n        ignoreNullValues: \\\"false\\\"\", \"description\": \"Hello world app for testing\", \"created_at\": \"2024-06-20T12:57:57.502Z\", \"updated_at\": \"2024-06-20T13:06:30.501Z\", \"organisations\": [1]}}]",
      "object_repr": "Hello World"
    }
  },
  {
    "model": "reversion.version",
    "pk": 4,
    "fields": {
      "revision": 4,
      "object_id": "1",
      "content_type": 30,
      "db": "default",
      "format": "json",
      "serialized_data": "[{\"model\": \"apps.apptemplate\", \"pk\": 1, \"fields\": {\"template_id\": \"rqx26whuo4oj\", \"name\": \"Hello World\", \"category\": 1, \"expose_node_port\": false, \"run_command_template\": \"\", \"managed\": false, \"manifest\": \"---\\r\\napiVersion: apps/v1\\r\\nkind: Deployment\\r\\nmetadata:\\r\\n  namespace: technr2\\r\\n  name: hello-world\\r\\n  labels:\\r\\n    app: hello-world\\r\\n    user: jankow\\r\\nspec:\\r\\n  replicas: 1\\r\\n  selector:\\r\\n    matchLabels:\\r\\n      app: hello-world\\r\\n      user: jankow\\r\\n  strategy:\\r\\n    type: Recreate\\r\\n  template:\\r\\n    metadata:\\r\\n      labels:\\r\\n        app: hello-world\\r\\n        user: jankow\\r\\n    spec:\\r\\n      containers:\\r\\n        - name: hello-world\\r\\n          image: strm/helloworld-http\\r\\n          ports:\\r\\n            - containerPort: 80\\r\\n              name: hello-world\\r\\n---\\r\\napiVersion: v1\\r\\nkind: Service\\r\\nmetadata:\\r\\n  namespace: technr2\\r\\n  name: hello-world\\r\\n  labels:\\r\\n    app: hello-world\\r\\n    user: jankow\\r\\nspec:\\r\\n  ports:\\r\\n    - protocol: TCP\\r\\n      port: 80\\r\\n      targetPort: 80\\r\\n  selector:\\r\\n    app: hello-world\\r\\n    user: jankow\\r\\n\\r\\n---\\r\\napiVersion: keda.sh/v1alpha1\\r\\nkind: ScaledObject\\r\\nmetadata:\\r\\n  name: hello-world\\r\\n  namespace: technr2\\r\\nspec:\\r\\n  scaleTargetRef:\\r\\n    name: hello-world\\r\\n  pollingInterval: 15\\r\\n  cooldownPeriod: 600\\r\\n  minReplicaCount: 0\\r\\n  maxReplicaCount: 1\\r\\n  advanced:\\r\\n    horizontalPodAutoscalerConfig:\\r\\n      behavior:\\r\\n        scaleDown:\\r\\n          stabilizationWindowSeconds: 600\\r\\n          policies:\\r\\n          - type: Percent\\r\\n            value: 100\\r\\n            periodSeconds: 15\\r\\n        scaleUp:\\r\\n          selectPolicy: Disabled\\r\\n  triggers:\\r\\n    - type: prometheus\\r\\n      metricType: Value\\r\\n      metadata:\\r\\n        serverAddress: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090\\r\\n        query: max(max(sum(rate(container_fs_reads_total{container!=\\\"\\\",job=\\\"kubelet\\\",metrics_path=\\\"/metrics/cadvisor\\\",pod=~\\\"hello-world.*\\\"}[2m30s])+rate(container_fs_writes_total{container!=\\\"\\\",job=\\\"kubelet\\\",metrics_path=\\\"/metrics/cadvisor\\\",pod=~\\\"hello-world.*\\\"}[2m30s]))) * 100 > bool 10 or (time() - kube_pod_created{pod=~\\\"hello-world.*\\\", namespace=\\\"technr2\\\"} < bool 300))\\r\\n        threshold: \\\"1\\\"\\r\\n        ignoreNullValues: \\\"false\\\"\", \"description\": \"Hello world app for testing\", \"created_at\": \"2024-06-20T12:57:57.502Z\", \"updated_at\": \"2024-06-20T13:13:18.134Z\", \"organisations\": [1]}}]",
      "object_repr": "Hello World"
    }
  },
  {
    "model": "reversion.version",
    "pk": 5,
    "fields": {
      "revision": 5,
      "object_id": "1",
      "content_type": 30,
      "db": "default",
      "format": "json",
      "serialized_data": "[{\"model\": \"apps.apptemplate\", \"pk\": 1, \"fields\": {\"template_id\": \"rqx26whuo4oj\", \"name\": \"Whoami\", \"category\": 1, \"expose_node_port\": false, \"run_command_template\": \"\", \"managed\": false, \"manifest\": \"---\\r\\napiVersion: apps/v1\\r\\nkind: Deployment\\r\\nmetadata:\\r\\n  namespace: technr2\\r\\n  name: whoami\\r\\n  labels:\\r\\n    app: whoami\\r\\n    user: jankow\\r\\nspec:\\r\\n  replicas: 1\\r\\n  selector:\\r\\n    matchLabels:\\r\\n      app: whoami\\r\\n      user: jankow\\r\\n  strategy:\\r\\n    type: Recreate\\r\\n  template:\\r\\n    metadata:\\r\\n      labels:\\r\\n        app: whoami\\r\\n        user: jankow\\r\\n    spec:\\r\\n      containers:\\r\\n        - name: whoami\\r\\n          image: traefik/whoami\\r\\n          ports:\\r\\n            - containerPort: 80\\r\\n              name: whoami\\r\\n---\\r\\napiVersion: v1\\r\\nkind: Service\\r\\nmetadata:\\r\\n  namespace: technr2\\r\\n  name: whoami\\r\\n  labels:\\r\\n    app: whoami\\r\\n    user: jankow\\r\\nspec:\\r\\n  ports:\\r\\n    - protocol: TCP\\r\\n      port: 80\\r\\n      targetPort: 80\\r\\n  selector:\\r\\n    app: whoami\\r\\n    user: jankow\\r\\n\\r\\n---\\r\\napiVersion: keda.sh/v1alpha1\\r\\nkind: ScaledObject\\r\\nmetadata:\\r\\n  name: whoami\\r\\n  namespace: technr2\\r\\nspec:\\r\\n  scaleTargetRef:\\r\\n    name: whoami\\r\\n  pollingInterval: 15\\r\\n  cooldownPeriod: 600\\r\\n  minReplicaCount: 0\\r\\n  maxReplicaCount: 1\\r\\n  advanced:\\r\\n    horizontalPodAutoscalerConfig:\\r\\n      behavior:\\r\\n        scaleDown:\\r\\n          stabilizationWindowSeconds: 600\\r\\n          policies:\\r\\n          - type: Percent\\r\\n            value: 100\\r\\n            periodSeconds: 15\\r\\n        scaleUp:\\r\\n          selectPolicy: Disabled\\r\\n  triggers:\\r\\n    - type: prometheus\\r\\n      metricType: Value\\r\\n      metadata:\\r\\n        serverAddress: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090\\r\\n        query: max(max(sum(rate(container_fs_reads_total{container!=\\\"\\\",job=\\\"kubelet\\\",metrics_path=\\\"/metrics/cadvisor\\\",pod=~\\\"whoami.*\\\"}[2m30s])+rate(container_fs_writes_total{container!=\\\"\\\",job=\\\"kubelet\\\",metrics_path=\\\"/metrics/cadvisor\\\",pod=~\\\"whoami.*\\\"}[2m30s]))) * 100 > bool 10 or (time() - kube_pod_created{pod=~\\\"whoami.*\\\", namespace=\\\"technr2\\\"} < bool 300))\\r\\n        threshold: \\\"1\\\"\\r\\n        ignoreNullValues: \\\"false\\\"\\r\\n\\r\\n\\r\\n---\\r\\napiVersion: networking.k8s.io/v1\\r\\nkind: Ingress\\r\\nmetadata:\\r\\n  name: whoami\\r\\n  namespace: technr2\\r\\nspec:\\r\\n  rules:\\r\\n  - host: whoami.apps.classlab.pl\\r\\n    http:\\r\\n      paths:\\r\\n      - path: /\\r\\n        pathType: Prefix\\r\\n        backend:\\r\\n          service:\\r\\n            name: whoami\\r\\n            port:\\r\\n              name: web\", \"description\": \"Hello world app for testing\", \"created_at\": \"2024-06-20T12:57:57.502Z\", \"updated_at\": \"2024-06-21T13:22:54.174Z\", \"organisations\": [1]}}]",
      "object_repr": "Whoami"
    }
  },
  {
    "model": "reversion.version",
    "pk": 6,
    "fields": {
      "revision": 6,
      "object_id": "1",
      "content_type": 30,
      "db": "default",
      "format": "json",
      "serialized_data": "[{\"model\": \"apps.apptemplate\", \"pk\": 1, \"fields\": {\"template_id\": \"rqx26whuo4oj\", \"name\": \"Whoami\", \"category\": 1, \"expose_node_port\": false, \"run_command_template\": \"\", \"managed\": false, \"manifest\": \"---\\r\\napiVersion: apps/v1\\r\\nkind: Deployment\\r\\nmetadata:\\r\\n  namespace: technr2\\r\\n  name: whoami\\r\\n  labels:\\r\\n    app: whoami\\r\\n    user: jankow\\r\\nspec:\\r\\n  replicas: 1\\r\\n  selector:\\r\\n    matchLabels:\\r\\n      app: whoami\\r\\n      user: jankow\\r\\n  strategy:\\r\\n    type: Recreate\\r\\n  template:\\r\\n    metadata:\\r\\n      labels:\\r\\n        app: whoami\\r\\n        user: jankow\\r\\n    spec:\\r\\n      containers:\\r\\n        - name: whoami\\r\\n          image: traefik/whoami\\r\\n          ports:\\r\\n            - containerPort: 80\\r\\n              name: whoami\\r\\n---\\r\\napiVersion: v1\\r\\nkind: Service\\r\\nmetadata:\\r\\n  namespace: technr2\\r\\n  name: whoami\\r\\n  labels:\\r\\n    app: whoami\\r\\n    user: jankow\\r\\nspec:\\r\\n  ports:\\r\\n    - protocol: TCP\\r\\n      port: 80\\r\\n      targetPort: 80\\r\\n  selector:\\r\\n    app: whoami\\r\\n    user: jankow\\r\\n\\r\\n---\\r\\napiVersion: keda.sh/v1alpha1\\r\\nkind: ScaledObject\\r\\nmetadata:\\r\\n  name: whoami\\r\\n  namespace: technr2\\r\\nspec:\\r\\n  scaleTargetRef:\\r\\n    name: whoami\\r\\n  pollingInterval: 15\\r\\n  cooldownPeriod: 600\\r\\n  minReplicaCount: 0\\r\\n  maxReplicaCount: 1\\r\\n  advanced:\\r\\n    horizontalPodAutoscalerConfig:\\r\\n      behavior:\\r\\n        scaleDown:\\r\\n          stabilizationWindowSeconds: 600\\r\\n          policies:\\r\\n          - type: Percent\\r\\n            value: 100\\r\\n            periodSeconds: 15\\r\\n        scaleUp:\\r\\n          selectPolicy: Disabled\\r\\n  triggers:\\r\\n    - type: prometheus\\r\\n      metricType: Value\\r\\n      metadata:\\r\\n        serverAddress: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090\\r\\n        query: max(max(sum(rate(container_fs_reads_total{container!=\\\"\\\",job=\\\"kubelet\\\",metrics_path=\\\"/metrics/cadvisor\\\",pod=~\\\"whoami.*\\\"}[2m30s])+rate(container_fs_writes_total{container!=\\\"\\\",job=\\\"kubelet\\\",metrics_path=\\\"/metrics/cadvisor\\\",pod=~\\\"whoami.*\\\"}[2m30s]))) * 100 > bool 10 or (time() - kube_pod_created{pod=~\\\"whoami.*\\\", namespace=\\\"technr2\\\"} < bool 300))\\r\\n        threshold: \\\"1\\\"\\r\\n        ignoreNullValues: \\\"false\\\"\\r\\n\\r\\n---\\r\\napiVersion: traefik.containo.us/v1alpha1\\r\\nkind: IngressRoute\\r\\nmetadata:\\r\\n  name: whoami\\r\\n  namespace: technr2\\r\\n  annotations:\\r\\n    cloud.google.com/neg: '{\\\"ingress\\\": true}'\\r\\nspec:\\r\\n  entryPoints:\\r\\n    - web\\r\\n    - websecure\\r\\n  routes:\\r\\n    - match: Host(`whoami.apps.classlab.pl`)\\r\\n      kind: Rule\\r\\n      services:\\r\\n        - name: whoami\\r\\n          port: 80\", \"description\": \"Hello world app for testing\", \"created_at\": \"2024-06-20T12:57:57.502Z\", \"updated_at\": \"2024-06-21T13:27:13.443Z\", \"organisations\": [1]}}]",
      "object_repr": "Whoami"
    }
  },
  {
    "model": "reversion.version",
    "pk": 7,
    "fields": {
      "revision": 7,
      "object_id": "1",
      "content_type": 30,
      "db": "default",
      "format": "json",
      "serialized_data": "[{\"model\": \"apps.apptemplate\", \"pk\": 1, \"fields\": {\"template_id\": \"rqx26whuo4oj\", \"name\": \"Whoami\", \"category\": 1, \"expose_node_port\": false, \"run_command_template\": \"\", \"managed\": false, \"manifest\": \"---\\r\\napiVersion: apps/v1\\r\\nkind: Deployment\\r\\nmetadata:\\r\\n  namespace: technr2\\r\\n  name: whoami\\r\\n  labels:\\r\\n    app: whoami\\r\\n    user: jankow\\r\\nspec:\\r\\n  replicas: 1\\r\\n  selector:\\r\\n    matchLabels:\\r\\n      app: whoami\\r\\n      user: jankow\\r\\n  strategy:\\r\\n    type: Recreate\\r\\n  template:\\r\\n    metadata:\\r\\n      labels:\\r\\n        app: whoami\\r\\n        user: jankow\\r\\n    spec:\\r\\n      containers:\\r\\n        - name: whoami\\r\\n          image: traefik/whoami\\r\\n          ports:\\r\\n            - containerPort: 80\\r\\n              name: whoami\\r\\n---\\r\\napiVersion: v1\\r\\nkind: Service\\r\\nmetadata:\\r\\n  namespace: technr2\\r\\n  name: whoami\\r\\n  labels:\\r\\n    app: whoami\\r\\n    user: jankow\\r\\nspec:\\r\\n  ports:\\r\\n    - protocol: TCP\\r\\n      port: 80\\r\\n      targetPort: 80\\r\\n  selector:\\r\\n    app: whoami\\r\\n    user: jankow\\r\\n\\r\\n---\\r\\napiVersion: keda.sh/v1alpha1\\r\\nkind: ScaledObject\\r\\nmetadata:\\r\\n  name: whoami\\r\\n  namespace: technr2\\r\\nspec:\\r\\n  scaleTargetRef:\\r\\n    name: whoami\\r\\n  pollingInterval: 15\\r\\n  cooldownPeriod: 600\\r\\n  minReplicaCount: 0\\r\\n  maxReplicaCount: 1\\r\\n  advanced:\\r\\n    horizontalPodAutoscalerConfig:\\r\\n      behavior:\\r\\n        scaleDown:\\r\\n          stabilizationWindowSeconds: 600\\r\\n          policies:\\r\\n          - type: Percent\\r\\n            value: 100\\r\\n            periodSeconds: 15\\r\\n        scaleUp:\\r\\n          selectPolicy: Disabled\\r\\n  triggers:\\r\\n    - type: prometheus\\r\\n      metricType: Value\\r\\n      metadata:\\r\\n        serverAddress: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090\\r\\n        query: max(max(sum(rate(container_fs_reads_total{container!=\\\"\\\",job=\\\"kubelet\\\",metrics_path=\\\"/metrics/cadvisor\\\",pod=~\\\"whoami.*\\\"}[2m30s])+rate(container_fs_writes_total{container!=\\\"\\\",job=\\\"kubelet\\\",metrics_path=\\\"/metrics/cadvisor\\\",pod=~\\\"whoami.*\\\"}[2m30s]))) * 100 > bool 10 or (time() - kube_pod_created{pod=~\\\"whoami.*\\\", namespace=\\\"technr2\\\"} < bool 300))\\r\\n        threshold: \\\"1\\\"\\r\\n        ignoreNullValues: \\\"false\\\"\\r\\n\\r\\n---\\r\\napiVersion: traefik.io/v1alpha1\\r\\nkind: IngressRoute\\r\\nmetadata:\\r\\n  name: whoami\\r\\n  namespace: technr2\\r\\n  annotations:\\r\\n    cloud.google.com/neg: '{\\\"ingress\\\": true}'\\r\\nspec:\\r\\n  entryPoints:\\r\\n    - web\\r\\n    - websecure\\r\\n  routes:\\r\\n    - match: Host(`whoami.apps.classlab.pl`)\\r\\n      kind: Rule\\r\\n      services:\\r\\n        - name: whoami\\r\\n          port: 80\", \"description\": \"Hello world app for testing\", \"created_at\": \"2024-06-20T12:57:57.502Z\", \"updated_at\": \"2024-06-21T13:29:34.842Z\", \"organisations\": [1]}}]",
      "object_repr": "Whoami"
    }
  },
  {
    "model": "reversion.version",
    "pk": 8,
    "fields": {
      "revision": 8,
      "object_id": "1",
      "content_type": 30,
      "db": "default",
      "format": "json",
      "serialized_data": "[{\"model\": \"apps.apptemplate\", \"pk\": 1, \"fields\": {\"template_id\": \"rqx26whuo4oj\", \"name\": \"Whoami\", \"category\": 1, \"expose_node_port\": false, \"run_command_template\": \"\", \"managed\": false, \"manifest\": \"---\\r\\napiVersion: apps/v1\\r\\nkind: Deployment\\r\\nmetadata:\\r\\n  namespace: {{ namespace }}\\r\\n  name: {{ app_id }}\\r\\n  labels:\\r\\n    app: {{ app_id }}\\r\\n    user: {{ user_id }}\\r\\nspec:\\r\\n  replicas: 1\\r\\n  selector:\\r\\n    matchLabels:\\r\\n      app: {{ app_id }}\\r\\n      user: {{ user_id }}\\r\\n  strategy:\\r\\n    type: Recreate\\r\\n  template:\\r\\n    metadata:\\r\\n      labels:\\r\\n        app: {{ app_id }}\\r\\n        user: {{ user_id }}\\r\\n    spec:\\r\\n      containers:\\r\\n        - name: {{ app_id }}\\r\\n          image: traefik/whoami\\r\\n          ports:\\r\\n            - containerPort: 80\\r\\n              name: whoami\\r\\n---\\r\\napiVersion: v1\\r\\nkind: Service\\r\\nmetadata:\\r\\n  namespace: {{ namespace }}\\r\\n  name: {{ app_id }}\\r\\n  labels:\\r\\n    app: {{ app_id }}\\r\\n    user: {{ user_id }}\\r\\nspec:\\r\\n  ports:\\r\\n    - protocol: TCP\\r\\n      port: 80\\r\\n      targetPort: 80\\r\\n  selector:\\r\\n    app: {{ app_id }}\\r\\n    user: {{ user_id }}\\r\\n\\r\\n---\\r\\napiVersion: keda.sh/v1alpha1\\r\\nkind: ScaledObject\\r\\nmetadata:\\r\\n  name: {{ app_id }}\\r\\n  namespace: {{ namespace }}\\r\\nspec:\\r\\n  scaleTargetRef:\\r\\n    name: {{ app_id }}\\r\\n  pollingInterval: 15\\r\\n  cooldownPeriod: 600\\r\\n  minReplicaCount: 0\\r\\n  maxReplicaCount: 1\\r\\n  advanced:\\r\\n    horizontalPodAutoscalerConfig:\\r\\n      behavior:\\r\\n        scaleDown:\\r\\n          stabilizationWindowSeconds: 600\\r\\n          policies:\\r\\n          - type: Percent\\r\\n            value: 100\\r\\n            periodSeconds: 15\\r\\n        scaleUp:\\r\\n          selectPolicy: Disabled\\r\\n  triggers:\\r\\n    - type: prometheus\\r\\n      metricType: Value\\r\\n      metadata:\\r\\n        serverAddress: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090\\r\\n        query: max(max(sum(rate(container_fs_reads_total{container!=\\\"\\\",job=\\\"kubelet\\\",metrics_path=\\\"/metrics/cadvisor\\\",pod=~\\\"{{ app_id }}.*\\\"}[2m30s])+rate(container_fs_writes_total{container!=\\\"\\\",job=\\\"kubelet\\\",metrics_path=\\\"/metrics/cadvisor\\\",pod=~\\\"{{ app_id }}.*\\\"}[2m30s]))) * 100 > bool 10 or (time() - kube_pod_created{pod=~\\\"{{app_id}}.*\\\", namespace=\\\"{{ namespace }}\\\"} < bool 300))\\r\\n        threshold: \\\"1\\\"\\r\\n        ignoreNullValues: \\\"false\\\"\\r\\n\\r\\n---\\r\\napiVersion: traefik.io/v1alpha1\\r\\nkind: IngressRoute\\r\\nmetadata:\\r\\n  name: {{ app_id }}\\r\\n  namespace: {{ namespace }}\\r\\n  annotations:\\r\\n    cloud.google.com/neg: '{\\\"ingress\\\": true}'\\r\\nspec:\\r\\n  entryPoints:\\r\\n    - web\\r\\n    - websecure\\r\\n  routes:\\r\\n    - match: Host(`{{ app_id }}.{{ proxy_domain }}`)\\r\\n      kind: Rule\\r\\n      services:\\r\\n        - name: {{ app_id }}\\r\\n          port: 80\", \"description\": \"Hello world app for testing\", \"created_at\": \"2024-06-20T12:57:57.502Z\", \"updated_at\": \"2024-06-21T13:31:28.735Z\", \"organisations\": [1]}}]",
      "object_repr": "Whoami"
    }
  },
  {
    "model": "reversion.version",
    "pk": 9,
    "fields": {
      "revision": 9,
      "object_id": "1",
      "content_type": 30,
      "db": "default",
      "format": "json",
      "serialized_data": "[{\"model\": \"apps.apptemplate\", \"pk\": 1, \"fields\": {\"template_id\": \"rqx26whuo4oj\", \"name\": \"Whoami\", \"category\": 1, \"expose_node_port\": false, \"run_command_template\": \"\", \"managed\": false, \"manifest\": \"---\\r\\napiVersion: apps/v1\\r\\nkind: Deployment\\r\\nmetadata:\\r\\n  namespace: {{ namespace }}\\r\\n  name: {{ app_id }}\\r\\n  labels:\\r\\n    app: {{ app_id }}\\r\\n    user: {{ user_id }}\\r\\nspec:\\r\\n  replicas: 1\\r\\n  selector:\\r\\n    matchLabels:\\r\\n      app: {{ app_id }}\\r\\n      user: {{ user_id }}\\r\\n  strategy:\\r\\n    type: Recreate\\r\\n  template:\\r\\n    metadata:\\r\\n      labels:\\r\\n        app: {{ app_id }}\\r\\n        user: {{ user_id }}\\r\\n    spec:\\r\\n      containers:\\r\\n        - name: {{ app_id }}\\r\\n          image: traefik/whoami\\r\\n          ports:\\r\\n            - containerPort: 80\\r\\n              name: whoami\\r\\n---\\r\\napiVersion: v1\\r\\nkind: Service\\r\\nmetadata:\\r\\n  namespace: {{ namespace }}\\r\\n  name: {{ app_id }}\\r\\n  labels:\\r\\n    app: {{ app_id }}\\r\\n    user: {{ user_id }}\\r\\nspec:\\r\\n  ports:\\r\\n    - protocol: TCP\\r\\n      port: 80\\r\\n      targetPort: 80\\r\\n  selector:\\r\\n    app: {{ app_id }}\\r\\n    user: {{ user_id }}\\r\\n\\r\\n---\\r\\napiVersion: keda.sh/v1alpha1\\r\\nkind: ScaledObject\\r\\nmetadata:\\r\\n  name: {{ app_id }}\\r\\n  namespace: {{ namespace }}\\r\\nspec:\\r\\n  scaleTargetRef:\\r\\n    name: {{ app_id }}\\r\\n  pollingInterval: 15\\r\\n  cooldownPeriod: 600\\r\\n  minReplicaCount: 0\\r\\n  maxReplicaCount: 1\\r\\n  advanced:\\r\\n    horizontalPodAutoscalerConfig:\\r\\n      behavior:\\r\\n        scaleDown:\\r\\n          stabilizationWindowSeconds: 600\\r\\n          policies:\\r\\n          - type: Percent\\r\\n            value: 100\\r\\n            periodSeconds: 15\\r\\n        scaleUp:\\r\\n          selectPolicy: Disabled\\r\\n  triggers:\\r\\n    - type: prometheus\\r\\n      metricType: Value\\r\\n      metadata:\\r\\n        serverAddress: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090\\r\\n        query: max(max(sum(rate(container_fs_reads_total{container!=\\\"\\\",job=\\\"kubelet\\\",metrics_path=\\\"/metrics/cadvisor\\\",pod=~\\\"{{ app_id }}.*\\\"}[2m30s])+rate(container_fs_writes_total{container!=\\\"\\\",job=\\\"kubelet\\\",metrics_path=\\\"/metrics/cadvisor\\\",pod=~\\\"{{ app_id }}.*\\\"}[2m30s]))) * 100 > bool 10 or (time() - kube_pod_created{pod=~\\\"{{app_id}}.*\\\", namespace=\\\"{{ namespace }}\\\"} < bool 300))\\r\\n        threshold: \\\"1\\\"\\r\\n        ignoreNullValues: \\\"false\\\"\\r\\n\\r\\n---\\r\\napiVersion: networking.k8s.io/v1\\r\\nkind: Ingress\\r\\nmetadata:\\r\\n  name: {{ app_id }}\\r\\n  namespace: {{ namespace }}\\r\\nspec:\\r\\n  ingressClassName: nginx\\r\\n  rules:\\r\\n  - host: {{ app_id }}.{{ proxy_domain }}\\r\\n    http:\\r\\n      paths:\\r\\n      - path: /\\r\\n        pathType: Prefix\\r\\n        backend:\\r\\n          service:\\r\\n            name: {{ app_id }}\\r\\n            port:\\r\\n              number: 80\", \"description\": \"Hello world app for testing\", \"created_at\": \"2024-06-20T12:57:57.502Z\", \"updated_at\": \"2024-06-21T16:01:39.454Z\", \"organisations\": [1]}}]",
      "object_repr": "Whoami"
    }
  },
  {
    "model": "reversion.version",
    "pk": 10,
    "fields": {
      "revision": 10,
      "object_id": "2",
      "content_type": 30,
      "db": "default",
      "format": "json",
      "serialized_data": "[{\"model\": \"apps.apptemplate\", \"pk\": 2, \"fields\": {\"template_id\": \"ediso963klno\", \"name\": \"Jupyterlab\", \"category\": 2, \"expose_node_port\": false, \"run_command_template\": \"\", \"managed\": false, \"manifest\": \"---\\r\\napiVersion: apps/v1\\r\\nkind: Deployment\\r\\nmetadata:\\r\\n  namespace: {{ namespace }}\\r\\n  name: {{ app_id }}\\r\\n  labels:\\r\\n    app: {{ app_id }}\\r\\n    user: {{ user_id }}\\r\\nspec:\\r\\n  replicas: 1\\r\\n  selector:\\r\\n    matchLabels:\\r\\n      app: {{ app_id }}\\r\\n      user: {{ user_id }}\\r\\n  strategy:\\r\\n    type: Recreate\\r\\n  template:\\r\\n    metadata:\\r\\n      labels:\\r\\n        app: {{ app_id }}\\r\\n        user: {{ user_id }}\\r\\n    spec:\\r\\n      containers:\\r\\n        - name: {{ app_id }}\\r\\n          image: quay.io/jupyter/datascience-notebook\\r\\n          ports:\\r\\n            - containerPort: 8888\\r\\n              name: jupyterlab\\r\\n              command: [\\\"start-notebook.py\\\", \\\"--NotebookApp.token=''\\\", \\\"--NotebookApp.password=''\\\", \\\"--ServerApp.root_dir='/home/scientist'\\\"]\\r\\n          volumeMounts:\\r\\n            - name: data\\r\\n              mountPath: /home/scientist\\r\\n\\r\\n      volumes:\\r\\n        - name: data\\r\\n          persistentVolumeClaim:\\r\\n            claimName: {{ app_id }}\\r\\n\\r\\n---\\r\\napiVersion: v1\\r\\nkind: PersistentVolumeClaim\\r\\nmetadata:\\r\\n  namespace: {{ namespace }}\\r\\n  name: {{ app_id }}\\r\\n  labels:\\r\\n    app: {{ app_id }}\\r\\n    user: {{ user_id }}\\r\\nspec:\\r\\n  accessModes:\\r\\n    - ReadWriteOnce\\r\\n  resources:\\r\\n    requests:\\r\\n      storage: 500Mi\\r\\n\\r\\n---\\r\\napiVersion: v1\\r\\nkind: Service\\r\\nmetadata:\\r\\n  namespace: {{ namespace }}\\r\\n  name: {{ app_id }}\\r\\n  labels:\\r\\n    app: {{ app_id }}\\r\\n    user: {{ user_id }}\\r\\nspec:\\r\\n  ports:\\r\\n    - protocol: TCP\\r\\n      port: 80\\r\\n      targetPort: 8888\\r\\n  selector:\\r\\n    app: {{ app_id }}\\r\\n    user: {{ user_id }}\\r\\n\\r\\n---\\r\\napiVersion: keda.sh/v1alpha1\\r\\nkind: ScaledObject\\r\\nmetadata:\\r\\n  name: {{ app_id }}\\r\\n  namespace: {{ namespace }}\\r\\nspec:\\r\\n  scaleTargetRef:\\r\\n    name: {{ app_id }}\\r\\n  pollingInterval: 15\\r\\n  cooldownPeriod: 600\\r\\n  minReplicaCount: 0\\r\\n  maxReplicaCount: 1\\r\\n  advanced:\\r\\n    horizontalPodAutoscalerConfig:\\r\\n      behavior:\\r\\n        scaleDown:\\r\\n          stabilizationWindowSeconds: 600\\r\\n          policies:\\r\\n          - type: Percent\\r\\n            value: 100\\r\\n            periodSeconds: 15\\r\\n        scaleUp:\\r\\n          selectPolicy: Disabled\\r\\n  triggers:\\r\\n    - type: prometheus\\r\\n      metricType: Value\\r\\n      metadata:\\r\\n        serverAddress: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090\\r\\n        query: max(max(sum(rate(container_fs_reads_total{container!=\\\"\\\",job=\\\"kubelet\\\",metrics_path=\\\"/metrics/cadvisor\\\",pod=~\\\"{{ app_id }}.*\\\"}[2m30s])+rate(container_fs_writes_total{container!=\\\"\\\",job=\\\"kubelet\\\",metrics_path=\\\"/metrics/cadvisor\\\",pod=~\\\"{{ app_id }}.*\\\"}[2m30s]))) * 100 > bool 10 or (time() - kube_pod_created{pod=~\\\"{{app_id}}.*\\\", namespace=\\\"{{ namespace }}\\\"} < bool 300))\\r\\n        threshold: \\\"1\\\"\\r\\n        ignoreNullValues: \\\"false\\\"\\r\\n\\r\\n---\\r\\napiVersion: networking.k8s.io/v1\\r\\nkind: Ingress\\r\\nmetadata:\\r\\n  name: {{ app_id }}\\r\\n  namespace: {{ namespace }}\\r\\nspec:\\r\\n  ingressClassName: nginx\\r\\n  rules:\\r\\n  - host: {{ app_id }}.{{ proxy_domain }}\\r\\n    http:\\r\\n      paths:\\r\\n      - path: /\\r\\n        pathType: Prefix\\r\\n        backend:\\r\\n          service:\\r\\n            name: {{ app_id }}\\r\\n            port:\\r\\n              number: 80\", \"description\": \"Jupyterlab\", \"created_at\": \"2024-06-21T19:02:58.594Z\", \"updated_at\": \"2024-06-21T19:02:58.594Z\", \"organisations\": [1]}}]",
      "object_repr": "Jupyterlab"
    }
  },
  {
    "model": "reversion.version",
    "pk": 11,
    "fields": {
      "revision": 11,
      "object_id": "2",
      "content_type": 30,
      "db": "default",
      "format": "json",
      "serialized_data": "[{\"model\": \"apps.apptemplate\", \"pk\": 2, \"fields\": {\"template_id\": \"ediso963klno\", \"name\": \"Jupyterlab\", \"category\": 2, \"expose_node_port\": false, \"run_command_template\": \"\", \"managed\": false, \"manifest\": \"---\\r\\napiVersion: apps/v1\\r\\nkind: Deployment\\r\\nmetadata:\\r\\n  namespace: {{ namespace }}\\r\\n  name: {{ app_id }}\\r\\n  labels:\\r\\n    app: {{ app_id }}\\r\\n    user: {{ user_id }}\\r\\nspec:\\r\\n  replicas: 1\\r\\n  selector:\\r\\n    matchLabels:\\r\\n      app: {{ app_id }}\\r\\n      user: {{ user_id }}\\r\\n  strategy:\\r\\n    type: Recreate\\r\\n  template:\\r\\n    metadata:\\r\\n      labels:\\r\\n        app: {{ app_id }}\\r\\n        user: {{ user_id }}\\r\\n    spec:\\r\\n      containers:\\r\\n        - name: {{ app_id }}\\r\\n          image: quay.io/jupyter/datascience-notebook\\r\\n          ports:\\r\\n            - containerPort: 8888\\r\\n              name: jupyterlab\\r\\n              command: [\\\"start-notebook.py\\\", \\\"--NotebookApp.token=''\\\", \\\"--NotebookApp.password=''\\\", \\\"--ServerApp.root_dir='/home/scientist'\\\", \\\"--ServerApp.base_url='{{ app_id }}.{{ proxy_domain }}'\\\", \\\"--ServerApp.allow_origin='{{ app_id }}.{{ proxy_domain }}'\\\"]\\r\\n\\r\\n          volumeMounts:\\r\\n            - name: data\\r\\n              mountPath: /home/scientist\\r\\n\\r\\n      volumes:\\r\\n        - name: data\\r\\n          persistentVolumeClaim:\\r\\n            claimName: {{ app_id }}\\r\\n\\r\\n---\\r\\napiVersion: v1\\r\\nkind: PersistentVolumeClaim\\r\\nmetadata:\\r\\n  namespace: {{ namespace }}\\r\\n  name: {{ app_id }}\\r\\n  labels:\\r\\n    app: {{ app_id }}\\r\\n    user: {{ user_id }}\\r\\nspec:\\r\\n  accessModes:\\r\\n    - ReadWriteOnce\\r\\n  resources:\\r\\n    requests:\\r\\n      storage: 500Mi\\r\\n\\r\\n---\\r\\napiVersion: v1\\r\\nkind: Service\\r\\nmetadata:\\r\\n  namespace: {{ namespace }}\\r\\n  name: {{ app_id }}\\r\\n  labels:\\r\\n    app: {{ app_id }}\\r\\n    user: {{ user_id }}\\r\\nspec:\\r\\n  ports:\\r\\n    - protocol: TCP\\r\\n      port: 80\\r\\n      targetPort: 8888\\r\\n  selector:\\r\\n    app: {{ app_id }}\\r\\n    user: {{ user_id }}\\r\\n\\r\\n---\\r\\napiVersion: keda.sh/v1alpha1\\r\\nkind: ScaledObject\\r\\nmetadata:\\r\\n  name: {{ app_id }}\\r\\n  namespace: {{ namespace }}\\r\\nspec:\\r\\n  scaleTargetRef:\\r\\n    name: {{ app_id }}\\r\\n  pollingInterval: 15\\r\\n  cooldownPeriod: 600\\r\\n  minReplicaCount: 0\\r\\n  maxReplicaCount: 1\\r\\n  advanced:\\r\\n    horizontalPodAutoscalerConfig:\\r\\n      behavior:\\r\\n        scaleDown:\\r\\n          stabilizationWindowSeconds: 600\\r\\n          policies:\\r\\n          - type: Percent\\r\\n            value: 100\\r\\n            periodSeconds: 15\\r\\n        scaleUp:\\r\\n          selectPolicy: Disabled\\r\\n  triggers:\\r\\n    - type: prometheus\\r\\n      metricType: Value\\r\\n      metadata:\\r\\n        serverAddress: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090\\r\\n        query: max(max(sum(rate(container_fs_reads_total{container!=\\\"\\\",job=\\\"kubelet\\\",metrics_path=\\\"/metrics/cadvisor\\\",pod=~\\\"{{ app_id }}.*\\\"}[2m30s])+rate(container_fs_writes_total{container!=\\\"\\\",job=\\\"kubelet\\\",metrics_path=\\\"/metrics/cadvisor\\\",pod=~\\\"{{ app_id }}.*\\\"}[2m30s]))) * 100 > bool 10 or (time() - kube_pod_created{pod=~\\\"{{app_id}}.*\\\", namespace=\\\"{{ namespace }}\\\"} < bool 300))\\r\\n        threshold: \\\"1\\\"\\r\\n        ignoreNullValues: \\\"false\\\"\\r\\n\\r\\n---\\r\\napiVersion: networking.k8s.io/v1\\r\\nkind: Ingress\\r\\nmetadata:\\r\\n  name: {{ app_id }}\\r\\n  namespace: {{ namespace }}\\r\\nspec:\\r\\n  ingressClassName: nginx\\r\\n  rules:\\r\\n  - host: {{ app_id }}.{{ proxy_domain }}\\r\\n    http:\\r\\n      paths:\\r\\n      - path: /\\r\\n        pathType: Prefix\\r\\n        backend:\\r\\n          service:\\r\\n            name: {{ app_id }}\\r\\n            port:\\r\\n              number: 80\", \"description\": \"Jupyterlab\", \"created_at\": \"2024-06-21T19:02:58.594Z\", \"updated_at\": \"2024-06-21T19:08:31.537Z\", \"organisations\": [1]}}]",
      "object_repr": "Jupyterlab"
    }
  },
  {
    "model": "reversion.version",
    "pk": 12,
    "fields": {
      "revision": 12,
      "object_id": "2",
      "content_type": 30,
      "db": "default",
      "format": "json",
      "serialized_data": "[{\"model\": \"apps.apptemplate\", \"pk\": 2, \"fields\": {\"template_id\": \"ediso963klno\", \"name\": \"Jupyterlab\", \"category\": 2, \"expose_node_port\": false, \"run_command_template\": \"\", \"managed\": false, \"manifest\": \"---\\r\\napiVersion: apps/v1\\r\\nkind: Deployment\\r\\nmetadata:\\r\\n  namespace: {{ namespace }}\\r\\n  name: {{ app_id }}\\r\\n  labels:\\r\\n    app: {{ app_id }}\\r\\n    user: {{ user_id }}\\r\\nspec:\\r\\n  replicas: 1\\r\\n  selector:\\r\\n    matchLabels:\\r\\n      app: {{ app_id }}\\r\\n      user: {{ user_id }}\\r\\n  strategy:\\r\\n    type: Recreate\\r\\n  template:\\r\\n    metadata:\\r\\n      labels:\\r\\n        app: {{ app_id }}\\r\\n        user: {{ user_id }}\\r\\n    spec:\\r\\n      containers:\\r\\n        - name: {{ app_id }}\\r\\n          image: quay.io/jupyter/datascience-notebook\\r\\n          ports:\\r\\n            - containerPort: 8888\\r\\n              name: jupyterlab\\r\\n              # TODO: use secrets for token and password\\r\\n              command: [\\\"start-notebook.py\\\", \\\"--NotebookApp.token='jupyter'\\\", \\\"--NotebookApp.password='jupyter'\\\", \\\"--ServerApp.root_dir='/home/scientist'\\\", \\\"--ServerApp.base_url='{{ app_id }}.{{ proxy_domain }}'\\\", \\\"--ServerApp.allow_origin='{{ app_id }}.{{ proxy_domain }}'\\\"]\\r\\n\\r\\n          volumeMounts:\\r\\n            - name: data\\r\\n              mountPath: /home/scientist\\r\\n\\r\\n      volumes:\\r\\n        - name: data\\r\\n          persistentVolumeClaim:\\r\\n            claimName: {{ app_id }}\\r\\n\\r\\n---\\r\\napiVersion: v1\\r\\nkind: PersistentVolumeClaim\\r\\nmetadata:\\r\\n  namespace: {{ namespace }}\\r\\n  name: {{ app_id }}\\r\\n  labels:\\r\\n    app: {{ app_id }}\\r\\n    user: {{ user_id }}\\r\\nspec:\\r\\n  accessModes:\\r\\n    - ReadWriteOnce\\r\\n  resources:\\r\\n    requests:\\r\\n      storage: 500Mi\\r\\n\\r\\n---\\r\\napiVersion: v1\\r\\nkind: Service\\r\\nmetadata:\\r\\n  namespace: {{ namespace }}\\r\\n  name: {{ app_id }}\\r\\n  labels:\\r\\n    app: {{ app_id }}\\r\\n    user: {{ user_id }}\\r\\nspec:\\r\\n  ports:\\r\\n    - protocol: TCP\\r\\n      port: 80\\r\\n      targetPort: 8888\\r\\n  selector:\\r\\n    app: {{ app_id }}\\r\\n    user: {{ user_id }}\\r\\n\\r\\n---\\r\\napiVersion: keda.sh/v1alpha1\\r\\nkind: ScaledObject\\r\\nmetadata:\\r\\n  name: {{ app_id }}\\r\\n  namespace: {{ namespace }}\\r\\nspec:\\r\\n  scaleTargetRef:\\r\\n    name: {{ app_id }}\\r\\n  pollingInterval: 15\\r\\n  cooldownPeriod: 600\\r\\n  minReplicaCount: 0\\r\\n  maxReplicaCount: 1\\r\\n  advanced:\\r\\n    horizontalPodAutoscalerConfig:\\r\\n      behavior:\\r\\n        scaleDown:\\r\\n          stabilizationWindowSeconds: 600\\r\\n          policies:\\r\\n          - type: Percent\\r\\n            value: 100\\r\\n            periodSeconds: 15\\r\\n        scaleUp:\\r\\n          selectPolicy: Disabled\\r\\n  triggers:\\r\\n    - type: prometheus\\r\\n      metricType: Value\\r\\n      metadata:\\r\\n        serverAddress: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090\\r\\n        query: max(max(sum(rate(container_fs_reads_total{container!=\\\"\\\",job=\\\"kubelet\\\",metrics_path=\\\"/metrics/cadvisor\\\",pod=~\\\"{{ app_id }}.*\\\"}[2m30s])+rate(container_fs_writes_total{container!=\\\"\\\",job=\\\"kubelet\\\",metrics_path=\\\"/metrics/cadvisor\\\",pod=~\\\"{{ app_id }}.*\\\"}[2m30s]))) * 100 > bool 10 or (time() - kube_pod_created{pod=~\\\"{{app_id}}.*\\\", namespace=\\\"{{ namespace }}\\\"} < bool 300))\\r\\n        threshold: \\\"1\\\"\\r\\n        ignoreNullValues: \\\"false\\\"\\r\\n\\r\\n---\\r\\napiVersion: networking.k8s.io/v1\\r\\nkind: Ingress\\r\\nmetadata:\\r\\n  name: {{ app_id }}\\r\\n  namespace: {{ namespace }}\\r\\nspec:\\r\\n  ingressClassName: nginx\\r\\n  rules:\\r\\n  - host: {{ app_id }}.{{ proxy_domain }}\\r\\n    http:\\r\\n      paths:\\r\\n      - path: /\\r\\n        pathType: Prefix\\r\\n        backend:\\r\\n          service:\\r\\n            name: {{ app_id }}\\r\\n            port:\\r\\n              number: 80\", \"description\": \"Jupyterlab\", \"created_at\": \"2024-06-21T19:02:58.594Z\", \"updated_at\": \"2024-06-21T19:10:59.871Z\", \"organisations\": [1]}}]",
      "object_repr": "Jupyterlab"
    }
  },
  {
    "model": "reversion.version",
    "pk": 13,
    "fields": {
      "revision": 13,
      "object_id": "2",
      "content_type": 30,
      "db": "default",
      "format": "json",
      "serialized_data": "[{\"model\": \"apps.apptemplate\", \"pk\": 2, \"fields\": {\"template_id\": \"ediso963klno\", \"name\": \"Jupyterlab\", \"category\": 2, \"expose_node_port\": false, \"run_command_template\": \"\", \"managed\": false, \"manifest\": \"---\\r\\napiVersion: apps/v1\\r\\nkind: Deployment\\r\\nmetadata:\\r\\n  namespace: {{ namespace }}\\r\\n  name: {{ app_id }}\\r\\n  labels:\\r\\n    app: {{ app_id }}\\r\\n    user: {{ user_id }}\\r\\nspec:\\r\\n  replicas: 1\\r\\n  selector:\\r\\n    matchLabels:\\r\\n      app: {{ app_id }}\\r\\n      user: {{ user_id }}\\r\\n  strategy:\\r\\n    type: Recreate\\r\\n  template:\\r\\n    metadata:\\r\\n      labels:\\r\\n        app: {{ app_id }}\\r\\n        user: {{ user_id }}\\r\\n    spec:\\r\\n      containers:\\r\\n        - name: {{ app_id }}\\r\\n          image: quay.io/jupyter/datascience-notebook\\r\\n          # TODO: use secrets for token and password\\r\\n          command: [\\\"start-notebook.py\\\", \\\"--NotebookApp.token=''\\\", \\\"--NotebookApp.password=''\\\", \\\"--ServerApp.root_dir='/home/scientist'\\\", \\\"--ServerApp.base_url='{{ app_id }}.{{ proxy_domain }}'\\\", \\\"--ServerApp.allow_origin='{{ app_id }}.{{ proxy_domain }}'\\\"]\\r\\n          ports:\\r\\n            - containerPort: 8888\\r\\n              name: jupyterlab\\r\\n\\r\\n          volumeMounts:\\r\\n            - name: data\\r\\n              mountPath: /home/scientist\\r\\n\\r\\n      volumes:\\r\\n        - name: data\\r\\n          persistentVolumeClaim:\\r\\n            claimName: {{ app_id }}\\r\\n\\r\\n---\\r\\napiVersion: v1\\r\\nkind: PersistentVolumeClaim\\r\\nmetadata:\\r\\n  namespace: {{ namespace }}\\r\\n  name: {{ app_id }}\\r\\n  labels:\\r\\n    app: {{ app_id }}\\r\\n    user: {{ user_id }}\\r\\nspec:\\r\\n  accessModes:\\r\\n    - ReadWriteOnce\\r\\n  resources:\\r\\n    requests:\\r\\n      storage: 500Mi\\r\\n\\r\\n---\\r\\napiVersion: v1\\r\\nkind: Service\\r\\nmetadata:\\r\\n  namespace: {{ namespace }}\\r\\n  name: {{ app_id }}\\r\\n  labels:\\r\\n    app: {{ app_id }}\\r\\n    user: {{ user_id }}\\r\\nspec:\\r\\n  ports:\\r\\n    - protocol: TCP\\r\\n      port: 80\\r\\n      targetPort: 8888\\r\\n  selector:\\r\\n    app: {{ app_id }}\\r\\n    user: {{ user_id }}\\r\\n\\r\\n---\\r\\napiVersion: keda.sh/v1alpha1\\r\\nkind: ScaledObject\\r\\nmetadata:\\r\\n  name: {{ app_id }}\\r\\n  namespace: {{ namespace }}\\r\\nspec:\\r\\n  scaleTargetRef:\\r\\n    name: {{ app_id }}\\r\\n  pollingInterval: 15\\r\\n  cooldownPeriod: 600\\r\\n  minReplicaCount: 0\\r\\n  maxReplicaCount: 1\\r\\n  advanced:\\r\\n    horizontalPodAutoscalerConfig:\\r\\n      behavior:\\r\\n        scaleDown:\\r\\n          stabilizationWindowSeconds: 600\\r\\n          policies:\\r\\n          - type: Percent\\r\\n            value: 100\\r\\n            periodSeconds: 15\\r\\n        scaleUp:\\r\\n          selectPolicy: Disabled\\r\\n  triggers:\\r\\n    - type: prometheus\\r\\n      metricType: Value\\r\\n      metadata:\\r\\n        serverAddress: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090\\r\\n        query: max(max(sum(rate(container_fs_reads_total{container!=\\\"\\\",job=\\\"kubelet\\\",metrics_path=\\\"/metrics/cadvisor\\\",pod=~\\\"{{ app_id }}.*\\\"}[2m30s])+rate(container_fs_writes_total{container!=\\\"\\\",job=\\\"kubelet\\\",metrics_path=\\\"/metrics/cadvisor\\\",pod=~\\\"{{ app_id }}.*\\\"}[2m30s]))) * 100 > bool 10 or (time() - kube_pod_created{pod=~\\\"{{app_id}}.*\\\", namespace=\\\"{{ namespace }}\\\"} < bool 300))\\r\\n        threshold: \\\"1\\\"\\r\\n        ignoreNullValues: \\\"false\\\"\\r\\n\\r\\n---\\r\\napiVersion: networking.k8s.io/v1\\r\\nkind: Ingress\\r\\nmetadata:\\r\\n  name: {{ app_id }}\\r\\n  namespace: {{ namespace }}\\r\\nspec:\\r\\n  ingressClassName: nginx\\r\\n  rules:\\r\\n  - host: {{ app_id }}.{{ proxy_domain }}\\r\\n    http:\\r\\n      paths:\\r\\n      - path: /\\r\\n        pathType: Prefix\\r\\n        backend:\\r\\n          service:\\r\\n            name: {{ app_id }}\\r\\n            port:\\r\\n              number: 80\", \"description\": \"Jupyterlab\", \"created_at\": \"2024-06-21T19:02:58.594Z\", \"updated_at\": \"2024-06-21T19:12:40.652Z\", \"organisations\": [1]}}]",
      "object_repr": "Jupyterlab"
    }
  },
  {
    "model": "reversion.version",
    "pk": 14,
    "fields": {
      "revision": 14,
      "object_id": "2",
      "content_type": 30,
      "db": "default",
      "format": "json",
      "serialized_data": "[{\"model\": \"apps.apptemplate\", \"pk\": 2, \"fields\": {\"template_id\": \"ediso963klno\", \"name\": \"Jupyterlab\", \"category\": 2, \"expose_node_port\": false, \"run_command_template\": \"\", \"managed\": false, \"manifest\": \"---\\r\\napiVersion: apps/v1\\r\\nkind: Deployment\\r\\nmetadata:\\r\\n  namespace: {{ namespace }}\\r\\n  name: {{ app_id }}\\r\\n  labels:\\r\\n    app: {{ app_id }}\\r\\n    user: {{ user_id }}\\r\\nspec:\\r\\n  replicas: 1\\r\\n  selector:\\r\\n    matchLabels:\\r\\n      app: {{ app_id }}\\r\\n      user: {{ user_id }}\\r\\n  strategy:\\r\\n    type: Recreate\\r\\n  template:\\r\\n    metadata:\\r\\n      labels:\\r\\n        app: {{ app_id }}\\r\\n        user: {{ user_id }}\\r\\n    spec:\\r\\n      containers:\\r\\n        - name: {{ app_id }}\\r\\n          image: quay.io/jupyter/datascience-notebook\\r\\n          # TODO: use secrets for token and password\\r\\n          command: [\\\"start-notebook.py\\\", \\\"--NotebookApp.token=''\\\", \\\"--NotebookApp.password=''\\\", \\\"--ServerApp.root_dir='/home/scientist'\\\", \\\"--ServerApp.base_url='{{ app_id }}.{{ proxy_domain }}'\\\"]\\r\\n          ports:\\r\\n            - containerPort: 8888\\r\\n              name: jupyterlab\\r\\n\\r\\n          volumeMounts:\\r\\n            - name: data\\r\\n              mountPath: /home/scientist\\r\\n\\r\\n      volumes:\\r\\n        - name: data\\r\\n          persistentVolumeClaim:\\r\\n            claimName: {{ app_id }}\\r\\n\\r\\n---\\r\\napiVersion: v1\\r\\nkind: PersistentVolumeClaim\\r\\nmetadata:\\r\\n  namespace: {{ namespace }}\\r\\n  name: {{ app_id }}\\r\\n  labels:\\r\\n    app: {{ app_id }}\\r\\n    user: {{ user_id }}\\r\\nspec:\\r\\n  accessModes:\\r\\n    - ReadWriteOnce\\r\\n  resources:\\r\\n    requests:\\r\\n      storage: 500Mi\\r\\n\\r\\n---\\r\\napiVersion: v1\\r\\nkind: Service\\r\\nmetadata:\\r\\n  namespace: {{ namespace }}\\r\\n  name: {{ app_id }}\\r\\n  labels:\\r\\n    app: {{ app_id }}\\r\\n    user: {{ user_id }}\\r\\nspec:\\r\\n  ports:\\r\\n    - protocol: TCP\\r\\n      port: 80\\r\\n      targetPort: 8888\\r\\n  selector:\\r\\n    app: {{ app_id }}\\r\\n    user: {{ user_id }}\\r\\n\\r\\n---\\r\\napiVersion: keda.sh/v1alpha1\\r\\nkind: ScaledObject\\r\\nmetadata:\\r\\n  name: {{ app_id }}\\r\\n  namespace: {{ namespace }}\\r\\nspec:\\r\\n  scaleTargetRef:\\r\\n    name: {{ app_id }}\\r\\n  pollingInterval: 15\\r\\n  cooldownPeriod: 600\\r\\n  minReplicaCount: 0\\r\\n  maxReplicaCount: 1\\r\\n  advanced:\\r\\n    horizontalPodAutoscalerConfig:\\r\\n      behavior:\\r\\n        scaleDown:\\r\\n          stabilizationWindowSeconds: 600\\r\\n          policies:\\r\\n          - type: Percent\\r\\n            value: 100\\r\\n            periodSeconds: 15\\r\\n        scaleUp:\\r\\n          selectPolicy: Disabled\\r\\n  triggers:\\r\\n    - type: prometheus\\r\\n      metricType: Value\\r\\n      metadata:\\r\\n        serverAddress: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090\\r\\n        query: max(max(sum(rate(container_fs_reads_total{container!=\\\"\\\",job=\\\"kubelet\\\",metrics_path=\\\"/metrics/cadvisor\\\",pod=~\\\"{{ app_id }}.*\\\"}[2m30s])+rate(container_fs_writes_total{container!=\\\"\\\",job=\\\"kubelet\\\",metrics_path=\\\"/metrics/cadvisor\\\",pod=~\\\"{{ app_id }}.*\\\"}[2m30s]))) * 100 > bool 10 or (time() - kube_pod_created{pod=~\\\"{{app_id}}.*\\\", namespace=\\\"{{ namespace }}\\\"} < bool 300))\\r\\n        threshold: \\\"1\\\"\\r\\n        ignoreNullValues: \\\"false\\\"\\r\\n\\r\\n---\\r\\napiVersion: networking.k8s.io/v1\\r\\nkind: Ingress\\r\\nmetadata:\\r\\n  name: {{ app_id }}\\r\\n  namespace: {{ namespace }}\\r\\nspec:\\r\\n  ingressClassName: nginx\\r\\n  rules:\\r\\n  - host: {{ app_id }}.{{ proxy_domain }}\\r\\n    http:\\r\\n      paths:\\r\\n      - path: /\\r\\n        pathType: Prefix\\r\\n        backend:\\r\\n          service:\\r\\n            name: {{ app_id }}\\r\\n            port:\\r\\n              number: 80\", \"description\": \"Jupyterlab\", \"created_at\": \"2024-06-21T19:02:58.594Z\", \"updated_at\": \"2024-06-21T19:14:02.350Z\", \"organisations\": [1]}}]",
      "object_repr": "Jupyterlab"
    }
  },
  {
    "model": "reversion.version",
    "pk": 15,
    "fields": {
      "revision": 15,
      "object_id": "2",
      "content_type": 30,
      "db": "default",
      "format": "json",
      "serialized_data": "[{\"model\": \"apps.apptemplate\", \"pk\": 2, \"fields\": {\"template_id\": \"ediso963klno\", \"name\": \"Jupyterlab\", \"category\": 2, \"expose_node_port\": false, \"run_command_template\": \"\", \"managed\": false, \"manifest\": \"---\\r\\napiVersion: apps/v1\\r\\nkind: Deployment\\r\\nmetadata:\\r\\n  namespace: {{ namespace }}\\r\\n  name: {{ app_id }}\\r\\n  labels:\\r\\n    app: {{ app_id }}\\r\\n    user: {{ user_id }}\\r\\nspec:\\r\\n  replicas: 1\\r\\n  selector:\\r\\n    matchLabels:\\r\\n      app: {{ app_id }}\\r\\n      user: {{ user_id }}\\r\\n  strategy:\\r\\n    type: Recreate\\r\\n  template:\\r\\n    metadata:\\r\\n      labels:\\r\\n        app: {{ app_id }}\\r\\n        user: {{ user_id }}\\r\\n    spec:\\r\\n      containers:\\r\\n        - name: {{ app_id }}\\r\\n          image: quay.io/jupyter/datascience-notebook\\r\\n          # TODO: use secrets for token and password\\r\\n          command: [\\\"start-notebook.py\\\", \\\"--NotebookApp.token=''\\\", \\\"--NotebookApp.password=''\\\"]\\r\\n          ports:\\r\\n            - containerPort: 8888\\r\\n              name: jupyterlab\\r\\n\\r\\n          volumeMounts:\\r\\n            - name: data\\r\\n              mountPath: /home/scientist\\r\\n\\r\\n      volumes:\\r\\n        - name: data\\r\\n          persistentVolumeClaim:\\r\\n            claimName: {{ app_id }}\\r\\n\\r\\n---\\r\\napiVersion: v1\\r\\nkind: PersistentVolumeClaim\\r\\nmetadata:\\r\\n  namespace: {{ namespace }}\\r\\n  name: {{ app_id }}\\r\\n  labels:\\r\\n    app: {{ app_id }}\\r\\n    user: {{ user_id }}\\r\\nspec:\\r\\n  accessModes:\\r\\n    - ReadWriteOnce\\r\\n  resources:\\r\\n    requests:\\r\\n      storage: 500Mi\\r\\n\\r\\n---\\r\\napiVersion: v1\\r\\nkind: Service\\r\\nmetadata:\\r\\n  namespace: {{ namespace }}\\r\\n  name: {{ app_id }}\\r\\n  labels:\\r\\n    app: {{ app_id }}\\r\\n    user: {{ user_id }}\\r\\nspec:\\r\\n  ports:\\r\\n    - protocol: TCP\\r\\n      port: 80\\r\\n      targetPort: 8888\\r\\n  selector:\\r\\n    app: {{ app_id }}\\r\\n    user: {{ user_id }}\\r\\n\\r\\n---\\r\\napiVersion: keda.sh/v1alpha1\\r\\nkind: ScaledObject\\r\\nmetadata:\\r\\n  name: {{ app_id }}\\r\\n  namespace: {{ namespace }}\\r\\nspec:\\r\\n  scaleTargetRef:\\r\\n    name: {{ app_id }}\\r\\n  pollingInterval: 15\\r\\n  cooldownPeriod: 600\\r\\n  minReplicaCount: 0\\r\\n  maxReplicaCount: 1\\r\\n  advanced:\\r\\n    horizontalPodAutoscalerConfig:\\r\\n      behavior:\\r\\n        scaleDown:\\r\\n          stabilizationWindowSeconds: 600\\r\\n          policies:\\r\\n          - type: Percent\\r\\n            value: 100\\r\\n            periodSeconds: 15\\r\\n        scaleUp:\\r\\n          selectPolicy: Disabled\\r\\n  triggers:\\r\\n    - type: prometheus\\r\\n      metricType: Value\\r\\n      metadata:\\r\\n        serverAddress: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090\\r\\n        query: max(max(sum(rate(container_fs_reads_total{container!=\\\"\\\",job=\\\"kubelet\\\",metrics_path=\\\"/metrics/cadvisor\\\",pod=~\\\"{{ app_id }}.*\\\"}[2m30s])+rate(container_fs_writes_total{container!=\\\"\\\",job=\\\"kubelet\\\",metrics_path=\\\"/metrics/cadvisor\\\",pod=~\\\"{{ app_id }}.*\\\"}[2m30s]))) * 100 > bool 10 or (time() - kube_pod_created{pod=~\\\"{{app_id}}.*\\\", namespace=\\\"{{ namespace }}\\\"} < bool 300))\\r\\n        threshold: \\\"1\\\"\\r\\n        ignoreNullValues: \\\"false\\\"\\r\\n\\r\\n---\\r\\napiVersion: networking.k8s.io/v1\\r\\nkind: Ingress\\r\\nmetadata:\\r\\n  name: {{ app_id }}\\r\\n  namespace: {{ namespace }}\\r\\nspec:\\r\\n  ingressClassName: nginx\\r\\n  rules:\\r\\n  - host: {{ app_id }}.{{ proxy_domain }}\\r\\n    http:\\r\\n      paths:\\r\\n      - path: /\\r\\n        pathType: Prefix\\r\\n        backend:\\r\\n          service:\\r\\n            name: {{ app_id }}\\r\\n            port:\\r\\n              number: 80\", \"description\": \"Jupyterlab\", \"created_at\": \"2024-06-21T19:02:58.594Z\", \"updated_at\": \"2024-06-21T19:15:13.250Z\", \"organisations\": [1]}}]",
      "object_repr": "Jupyterlab"
    }
  },
  {
    "model": "reversion.version",
    "pk": 16,
    "fields": {
      "revision": 16,
      "object_id": "2",
      "content_type": 30,
      "db": "default",
      "format": "json",
      "serialized_data": "[{\"model\": \"apps.apptemplate\", \"pk\": 2, \"fields\": {\"template_id\": \"ediso963klno\", \"name\": \"Jupyterlab\", \"category\": 2, \"expose_node_port\": false, \"run_command_template\": \"\", \"managed\": false, \"manifest\": \"---\\r\\napiVersion: apps/v1\\r\\nkind: Deployment\\r\\nmetadata:\\r\\n  namespace: {{ namespace }}\\r\\n  name: {{ app_id }}\\r\\n  labels:\\r\\n    app: {{ app_id }}\\r\\n    user: {{ user_id }}\\r\\nspec:\\r\\n  replicas: 1\\r\\n  selector:\\r\\n    matchLabels:\\r\\n      app: {{ app_id }}\\r\\n      user: {{ user_id }}\\r\\n  strategy:\\r\\n    type: Recreate\\r\\n  template:\\r\\n    metadata:\\r\\n      labels:\\r\\n        app: {{ app_id }}\\r\\n        user: {{ user_id }}\\r\\n    spec:\\r\\n      containers:\\r\\n        - name: {{ app_id }}\\r\\n          image: quay.io/jupyter/datascience-notebook\\r\\n          # TODO: use secrets for token and password\\r\\n          command: [\\\"start-notebook.py\\\", \\\"--NotebookApp.token=''\\\", \\\"--NotebookApp.password=''\\\", \\\"--ServerApp.root_dir='/home/scientist'\\\"]\\r\\n          ports:\\r\\n            - containerPort: 8888\\r\\n              name: jupyterlab\\r\\n\\r\\n          volumeMounts:\\r\\n            - name: data\\r\\n              mountPath: /home/scientist\\r\\n\\r\\n      volumes:\\r\\n        - name: data\\r\\n          persistentVolumeClaim:\\r\\n            claimName: {{ app_id }}\\r\\n\\r\\n---\\r\\napiVersion: v1\\r\\nkind: PersistentVolumeClaim\\r\\nmetadata:\\r\\n  namespace: {{ namespace }}\\r\\n  name: {{ app_id }}\\r\\n  labels:\\r\\n    app: {{ app_id }}\\r\\n    user: {{ user_id }}\\r\\nspec:\\r\\n  accessModes:\\r\\n    - ReadWriteOnce\\r\\n  resources:\\r\\n    requests:\\r\\n      storage: 500Mi\\r\\n\\r\\n---\\r\\napiVersion: v1\\r\\nkind: Service\\r\\nmetadata:\\r\\n  namespace: {{ namespace }}\\r\\n  name: {{ app_id }}\\r\\n  labels:\\r\\n    app: {{ app_id }}\\r\\n    user: {{ user_id }}\\r\\nspec:\\r\\n  ports:\\r\\n    - protocol: TCP\\r\\n      port: 80\\r\\n      targetPort: 8888\\r\\n  selector:\\r\\n    app: {{ app_id }}\\r\\n    user: {{ user_id }}\\r\\n\\r\\n---\\r\\napiVersion: keda.sh/v1alpha1\\r\\nkind: ScaledObject\\r\\nmetadata:\\r\\n  name: {{ app_id }}\\r\\n  namespace: {{ namespace }}\\r\\nspec:\\r\\n  scaleTargetRef:\\r\\n    name: {{ app_id }}\\r\\n  pollingInterval: 15\\r\\n  cooldownPeriod: 600\\r\\n  minReplicaCount: 0\\r\\n  maxReplicaCount: 1\\r\\n  advanced:\\r\\n    horizontalPodAutoscalerConfig:\\r\\n      behavior:\\r\\n        scaleDown:\\r\\n          stabilizationWindowSeconds: 600\\r\\n          policies:\\r\\n          - type: Percent\\r\\n            value: 100\\r\\n            periodSeconds: 15\\r\\n        scaleUp:\\r\\n          selectPolicy: Disabled\\r\\n  triggers:\\r\\n    - type: prometheus\\r\\n      metricType: Value\\r\\n      metadata:\\r\\n        serverAddress: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090\\r\\n        query: max(max(sum(rate(container_fs_reads_total{container!=\\\"\\\",job=\\\"kubelet\\\",metrics_path=\\\"/metrics/cadvisor\\\",pod=~\\\"{{ app_id }}.*\\\"}[2m30s])+rate(container_fs_writes_total{container!=\\\"\\\",job=\\\"kubelet\\\",metrics_path=\\\"/metrics/cadvisor\\\",pod=~\\\"{{ app_id }}.*\\\"}[2m30s]))) * 100 > bool 10 or (time() - kube_pod_created{pod=~\\\"{{app_id}}.*\\\", namespace=\\\"{{ namespace }}\\\"} < bool 300))\\r\\n        threshold: \\\"1\\\"\\r\\n        ignoreNullValues: \\\"false\\\"\\r\\n\\r\\n---\\r\\napiVersion: networking.k8s.io/v1\\r\\nkind: Ingress\\r\\nmetadata:\\r\\n  name: {{ app_id }}\\r\\n  namespace: {{ namespace }}\\r\\nspec:\\r\\n  ingressClassName: nginx\\r\\n  rules:\\r\\n  - host: {{ app_id }}.{{ proxy_domain }}\\r\\n    http:\\r\\n      paths:\\r\\n      - path: /\\r\\n        pathType: Prefix\\r\\n        backend:\\r\\n          service:\\r\\n            name: {{ app_id }}\\r\\n            port:\\r\\n              number: 80\", \"description\": \"Jupyterlab\", \"created_at\": \"2024-06-21T19:02:58.594Z\", \"updated_at\": \"2024-06-21T19:22:09.455Z\", \"organisations\": [1]}}]",
      "object_repr": "Jupyterlab"
    }
  },
  {
    "model": "reversion.version",
    "pk": 17,
    "fields": {
      "revision": 17,
      "object_id": "3",
      "content_type": 30,
      "db": "default",
      "format": "json",
      "serialized_data": "[{\"model\": \"apps.apptemplate\", \"pk\": 3, \"fields\": {\"template_id\": \"w0y9pwymwdvq\", \"name\": \"VS Code\", \"category\": 3, \"expose_node_port\": false, \"run_command_template\": \"\", \"managed\": false, \"manifest\": \"---\\r\\napiVersion: apps/v1\\r\\nkind: Deployment\\r\\nmetadata:\\r\\n  namespace: {{ namespace }}\\r\\n  name: {{ app_id }}\\r\\n  labels:\\r\\n    app: {{ app_id }}\\r\\n    user: {{ user_id }}\\r\\nspec:\\r\\n  replicas: 1\\r\\n  selector:\\r\\n    matchLabels:\\r\\n      app: {{ app_id }}\\r\\n      user: {{ user_id }}\\r\\n  strategy:\\r\\n    type: Recreate\\r\\n  template:\\r\\n    metadata:\\r\\n      labels:\\r\\n        app: {{ app_id }}\\r\\n        user: {{ user_id }}\\r\\n    spec:\\r\\n      containers:\\r\\n        - name: code-server\\r\\n          image: lscr.io/linuxserver/code-server:latest\\r\\n          ports:\\r\\n            - containerPort: 8443\\r\\n              name: code-server\\r\\n\\r\\n          env:\\r\\n            - name: PUID\\r\\n              value: \\\"1000\\\"\\r\\n            - name: PGID\\r\\n              value: \\\"1000\\\"\\r\\n            - name: TZ\\r\\n              value: \\\"Europe/Warsaw\\\"\\r\\n            - name: PASSWORD\\r\\n              value: \\\"password\\\"\\r\\n            - name: SUDO_PASSWORD\\r\\n              value: \\\"password\\\"\\r\\n            - name: PROXY_DOMAIN\\r\\n              value: \\\"{{ app_id }}.{{ proxy_domain }}\\\"\\r\\n            - name: DEFAULT_WORKSPACE\\r\\n              value: \\\"/workspace\\\"\\r\\n\\r\\n          volumeMounts:\\r\\n            - name: data\\r\\n              mountPath: /workspace\\r\\n\\r\\n      volumes:\\r\\n        - name: data\\r\\n          persistentVolumeClaim:\\r\\n            claimName: {{ app_id }}\\r\\n\\r\\n---\\r\\napiVersion: v1\\r\\nkind: PersistentVolumeClaim\\r\\nmetadata:\\r\\n  namespace: {{ namespace }}\\r\\n  name: {{ app_id }}\\r\\n  labels:\\r\\n    app: {{ app_id }}\\r\\n    user: {{ user_id }}\\r\\nspec:\\r\\n  accessModes:\\r\\n    - ReadWriteOnce\\r\\n  resources:\\r\\n    requests:\\r\\n      storage: 500Mi\\r\\n\\r\\n---\\r\\napiVersion: v1\\r\\nkind: Service\\r\\nmetadata:\\r\\n  namespace: {{ namespace }}\\r\\n  name: {{ app_id }}\\r\\n  labels:\\r\\n    app: {{ app_id }}\\r\\n    user: {{ user_id }}\\r\\nspec:\\r\\n  ports:\\r\\n    - protocol: TCP\\r\\n      port: 80\\r\\n      targetPort: 8443\\r\\n  selector:\\r\\n    app: {{ app_id }}\\r\\n    user: {{ user_id }}\\r\\n\\r\\n---\\r\\napiVersion: keda.sh/v1alpha1\\r\\nkind: ScaledObject\\r\\nmetadata:\\r\\n  name: {{ app_id }}\\r\\n  namespace: {{ namespace }}\\r\\nspec:\\r\\n  scaleTargetRef:\\r\\n    name: {{ app_id }}\\r\\n  pollingInterval: 15\\r\\n  cooldownPeriod: 600\\r\\n  minReplicaCount: 0\\r\\n  maxReplicaCount: 1\\r\\n  advanced:\\r\\n    horizontalPodAutoscalerConfig:\\r\\n      behavior:\\r\\n        scaleDown:\\r\\n          stabilizationWindowSeconds: 600\\r\\n          policies:\\r\\n          - type: Percent\\r\\n            value: 100\\r\\n            periodSeconds: 15\\r\\n        scaleUp:\\r\\n          selectPolicy: Disabled\\r\\n  triggers:\\r\\n    - type: prometheus\\r\\n      metricType: Value\\r\\n      metadata:\\r\\n        serverAddress: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090\\r\\n        query: max(max(sum(rate(container_fs_reads_total{container!=\\\"\\\",job=\\\"kubelet\\\",metrics_path=\\\"/metrics/cadvisor\\\",pod=~\\\"{{ app_id }}.*\\\"}[2m30s])+rate(container_fs_writes_total{container!=\\\"\\\",job=\\\"kubelet\\\",metrics_path=\\\"/metrics/cadvisor\\\",pod=~\\\"{{ app_id }}.*\\\"}[2m30s]))) * 100 > bool 10 or (time() - kube_pod_created{pod=~\\\"{{app_id}}.*\\\", namespace=\\\"{{ namespace }}\\\"} < bool 300))\\r\\n        threshold: \\\"1\\\"\\r\\n        ignoreNullValues: \\\"false\\\"\\r\\n\\r\\n---\\r\\napiVersion: networking.k8s.io/v1\\r\\nkind: Ingress\\r\\nmetadata:\\r\\n  name: {{ app_id }}\\r\\n  namespace: {{ namespace }}\\r\\nspec:\\r\\n  ingressClassName: nginx\\r\\n  rules:\\r\\n  - host: {{ app_id }}.{{ proxy_domain }}\\r\\n    http:\\r\\n      paths:\\r\\n      - path: /\\r\\n        pathType: Prefix\\r\\n        backend:\\r\\n          service:\\r\\n            name: {{ app_id }}\\r\\n            port:\\r\\n              number: 80\", \"description\": \"\", \"created_at\": \"2024-06-21T19:32:42.776Z\", \"updated_at\": \"2024-06-21T19:32:42.776Z\", \"organisations\": [1]}}]",
      "object_repr": "VS Code"
    }
  },
  {
    "model": "users.user",
    "pk": 1,
    "fields": {
      "password": "argon2$argon2id$v=19$m=102400,t=2,p=8$UU9XZHlWWnpDbGl3Y1lZeTY4Q2RpSw$pBXwh41Ky3SL6Vdx6kq54T5hGpYQYFmVHC1yKcsON70",
      "last_login": "2024-06-20T12:57:23.247Z",
      "is_superuser": true,
      "user_id": "zbz6jfzlae6j",
      "user_type": null,
      "email": "admin@admin.com",
      "first_name": "Jan",
      "last_name": "Kowalski",
      "is_staff": true,
      "is_active": true,
      "date_joined": "2024-06-20T08:32:41.191Z",
      "groups": [],
      "user_permissions": []
    }
  },
  {
    "model": "users.user",
    "pk": 2,
    "fields": {
      "password": "argon2$argon2id$v=19$m=102400,t=2,p=8$VWNCN1JvM0JWNVhCY1BmQ3FUeGF6Tg$eKIw/Vw++qy9jSZlGFCUis/sQ28REnKvKG4Mb3R4hPQ",
      "last_login": "2024-06-20T13:00:23.545Z",
      "is_superuser": false,
      "user_id": "mtdp92f51if8",
      "user_type": "ADMIN",
      "email": "admin@technr2.pl",
      "first_name": "Jan",
      "last_name": "Kowalski",
      "is_staff": false,
      "is_active": true,
      "date_joined": "2024-06-20T08:36:40Z",
      "groups": [1],
      "user_permissions": []
    }
  },
  {
    "model": "users.user",
    "pk": 3,
    "fields": {
      "password": "!Cl8xJ6ho3LfACNcLXBkCFgdu1C7iGsRvXCQw40nh",
      "last_login": null,
      "is_superuser": false,
      "user_id": "pamdmbauslca",
      "user_type": "TEACHER",
      "email": "s.batory@technr2.pl",
      "first_name": "Stefan",
      "last_name": "Batory",
      "is_staff": false,
      "is_active": true,
      "date_joined": "2024-06-20T08:39:18.300Z",
      "groups": [2],
      "user_permissions": []
    }
  },
  {
    "model": "users.user",
    "pk": 4,
    "fields": {
      "password": "argon2$argon2id$v=19$m=102400,t=2,p=8$b3RSZkpXVlBEWWExTVZSU213NjE5NQ$9hGXytvYCNb/qKVjCMwGo/Ax5ireVWWvIa8JsJlgb5Y",
      "last_login": "2024-06-21T16:02:03.106Z",
      "is_superuser": false,
      "user_id": "u638mbu8rkbo",
      "user_type": "STUDENT",
      "email": "a.fast@technr2.pl",
      "first_name": "Alicja",
      "last_name": "Fast",
      "is_staff": false,
      "is_active": true,
      "date_joined": "2024-06-20T08:39:54.259Z",
      "groups": [3],
      "user_permissions": []
    }
  },
  {
    "model": "users.user",
    "pk": 5,
    "fields": {
      "password": "!PTETUD0BgTmvc5G7mP5VzcR5mIBpulmCEFlnN8MA",
      "last_login": null,
      "is_superuser": false,
      "user_id": "m5n2zrhhb9q8",
      "user_type": "STUDENT",
      "email": "j.boberek@technr2.pl",
      "first_name": "Jarosław",
      "last_name": "Boberek",
      "is_staff": false,
      "is_active": true,
      "date_joined": "2024-06-20T08:40:37.640Z",
      "groups": [3],
      "user_permissions": []
    }
  },
  {
    "model": "cloud.clusterconfig",
    "pk": 1,
    "fields": {
      "name": "Technikum nr 2",
      "organisation": 1,
      "namespace": "technr2",
      "spot_pool": false
    }
  },
  {
    "model": "organisations.organisation",
    "pk": 1,
    "fields": {
      "organisation_id": "jogy64svejv8",
      "name": "Technikum nr. 2",
      "slug": "tech-nr2",
      "created_by": 1,
      "created_at": "2024-06-20T08:35:34.484Z",
      "updated_at": "2024-06-20T08:35:34.484Z"
    }
  },
  {
    "model": "administrators.administrator",
    "pk": 1,
    "fields": {
      "user": 2,
      "administrator_id": "a8jowsqpuied",
      "organisation": 1,
      "created_by": 1,
      "created_at": "2024-06-20T08:36:59.638Z",
      "updated_at": "2024-06-20T08:36:59.638Z"
    }
  },
  {
    "model": "teachers.teacher",
    "pk": 1,
    "fields": {
      "user": 3,
      "teacher_id": "fe2si0jij5yx",
      "organisation": 1,
      "created_by": null,
      "created_at": "2024-06-20T08:39:18.303Z",
      "updated_at": "2024-06-20T08:39:18.303Z",
      "classes": [1]
    }
  },
  {
    "model": "students.student",
    "pk": 1,
    "fields": {
      "user": 4,
      "student_id": "s7crypanjh2m",
      "organisation": 1,
      "student_class": 1,
      "created_by": null,
      "created_at": "2024-06-20T08:39:54.262Z",
      "updated_at": "2024-06-20T08:39:54.262Z"
    }
  },
  {
    "model": "students.student",
    "pk": 2,
    "fields": {
      "user": 5,
      "student_id": "n0gvulbtykri",
      "organisation": 1,
      "student_class": 1,
      "created_by": null,
      "created_at": "2024-06-20T08:40:37.642Z",
      "updated_at": "2024-06-20T08:40:37.642Z"
    }
  },
  {
    "model": "classes.class",
    "pk": 1,
    "fields": {
      "class_id": "pxguodcpmp40",
      "name": "Klasa 1TI",
      "organisation": 1,
      "created_by": null,
      "created_at": "2024-06-20T08:38:55.032Z",
      "updated_at": "2024-06-20T08:40:47.872Z"
    }
  },
  {
    "model": "apps.appcategory",
    "pk": 1,
    "fields": {
      "name": "Test",
      "slug": "test",
      "created_at": "2024-06-20T12:57:43.924Z",
      "updated_at": "2024-06-20T12:57:43.924Z"
    }
  },
  {
    "model": "apps.appcategory",
    "pk": 2,
    "fields": {
      "name": "Data Science",
      "slug": "data-science",
      "created_at": "2024-06-21T19:02:30.054Z",
      "updated_at": "2024-06-21T19:02:30.054Z"
    }
  },
  {
    "model": "apps.appcategory",
    "pk": 3,
    "fields": {
      "name": "Developer",
      "slug": "dev",
      "created_at": "2024-06-21T19:32:37.208Z",
      "updated_at": "2024-06-21T19:32:37.208Z"
    }
  },
  {
    "model": "apps.apptemplate",
    "pk": 1,
    "fields": {
      "template_id": "rqx26whuo4oj",
      "name": "Whoami",
      "category": 1,
      "expose_node_port": false,
      "run_command_template": "",
      "managed": false,
      "manifest": "---\r\napiVersion: apps/v1\r\nkind: Deployment\r\nmetadata:\r\n  namespace: {{ namespace }}\r\n  name: {{ app_id }}\r\n  labels:\r\n    app: {{ app_id }}\r\n    user: {{ user_id }}\r\nspec:\r\n  replicas: 1\r\n  selector:\r\n    matchLabels:\r\n      app: {{ app_id }}\r\n      user: {{ user_id }}\r\n  strategy:\r\n    type: Recreate\r\n  template:\r\n    metadata:\r\n      labels:\r\n        app: {{ app_id }}\r\n        user: {{ user_id }}\r\n    spec:\r\n      containers:\r\n        - name: {{ app_id }}\r\n          image: traefik/whoami\r\n          ports:\r\n            - containerPort: 80\r\n              name: whoami\r\n---\r\napiVersion: v1\r\nkind: Service\r\nmetadata:\r\n  namespace: {{ namespace }}\r\n  name: {{ app_id }}\r\n  labels:\r\n    app: {{ app_id }}\r\n    user: {{ user_id }}\r\nspec:\r\n  ports:\r\n    - protocol: TCP\r\n      port: 80\r\n      targetPort: 80\r\n  selector:\r\n    app: {{ app_id }}\r\n    user: {{ user_id }}\r\n\r\n---\r\napiVersion: keda.sh/v1alpha1\r\nkind: ScaledObject\r\nmetadata:\r\n  name: {{ app_id }}\r\n  namespace: {{ namespace }}\r\nspec:\r\n  scaleTargetRef:\r\n    name: {{ app_id }}\r\n  pollingInterval: 15\r\n  cooldownPeriod: 600\r\n  minReplicaCount: 0\r\n  maxReplicaCount: 1\r\n  advanced:\r\n    horizontalPodAutoscalerConfig:\r\n      behavior:\r\n        scaleDown:\r\n          stabilizationWindowSeconds: 600\r\n          policies:\r\n          - type: Percent\r\n            value: 100\r\n            periodSeconds: 15\r\n        scaleUp:\r\n          selectPolicy: Disabled\r\n  triggers:\r\n    - type: prometheus\r\n      metricType: Value\r\n      metadata:\r\n        serverAddress: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090\r\n        query: max(max(sum(rate(container_fs_reads_total{container!=\"\",job=\"kubelet\",metrics_path=\"/metrics/cadvisor\",pod=~\"{{ app_id }}.*\"}[2m30s])+rate(container_fs_writes_total{container!=\"\",job=\"kubelet\",metrics_path=\"/metrics/cadvisor\",pod=~\"{{ app_id }}.*\"}[2m30s]))) * 100 > bool 10 or (time() - kube_pod_created{pod=~\"{{app_id}}.*\", namespace=\"{{ namespace }}\"} < bool 300))\r\n        threshold: \"1\"\r\n        ignoreNullValues: \"false\"\r\n\r\n---\r\napiVersion: networking.k8s.io/v1\r\nkind: Ingress\r\nmetadata:\r\n  name: {{ app_id }}\r\n  namespace: {{ namespace }}\r\nspec:\r\n  ingressClassName: nginx\r\n  rules:\r\n  - host: {{ app_id }}.{{ proxy_domain }}\r\n    http:\r\n      paths:\r\n      - path: /\r\n        pathType: Prefix\r\n        backend:\r\n          service:\r\n            name: {{ app_id }}\r\n            port:\r\n              number: 80",
      "description": "Hello world app for testing",
      "created_at": "2024-06-20T12:57:57.502Z",
      "updated_at": "2024-06-21T16:01:39.454Z",
      "organisations": [1]
    }
  },
  {
    "model": "apps.apptemplate",
    "pk": 2,
    "fields": {
      "template_id": "ediso963klno",
      "name": "Jupyterlab",
      "category": 2,
      "expose_node_port": false,
      "run_command_template": "",
      "managed": false,
      "manifest": "---\r\napiVersion: apps/v1\r\nkind: Deployment\r\nmetadata:\r\n  namespace: {{ namespace }}\r\n  name: {{ app_id }}\r\n  labels:\r\n    app: {{ app_id }}\r\n    user: {{ user_id }}\r\nspec:\r\n  replicas: 1\r\n  selector:\r\n    matchLabels:\r\n      app: {{ app_id }}\r\n      user: {{ user_id }}\r\n  strategy:\r\n    type: Recreate\r\n  template:\r\n    metadata:\r\n      labels:\r\n        app: {{ app_id }}\r\n        user: {{ user_id }}\r\n    spec:\r\n      containers:\r\n        - name: {{ app_id }}\r\n          image: quay.io/jupyter/datascience-notebook\r\n          # TODO: use secrets for token and password\r\n          command: [\"start-notebook.py\", \"--NotebookApp.token=''\", \"--NotebookApp.password=''\", \"--ServerApp.root_dir='/home/scientist'\"]\r\n          ports:\r\n            - containerPort: 8888\r\n              name: jupyterlab\r\n\r\n          volumeMounts:\r\n            - name: data\r\n              mountPath: /home/scientist\r\n\r\n      volumes:\r\n        - name: data\r\n          persistentVolumeClaim:\r\n            claimName: {{ app_id }}\r\n\r\n---\r\napiVersion: v1\r\nkind: PersistentVolumeClaim\r\nmetadata:\r\n  namespace: {{ namespace }}\r\n  name: {{ app_id }}\r\n  labels:\r\n    app: {{ app_id }}\r\n    user: {{ user_id }}\r\nspec:\r\n  accessModes:\r\n    - ReadWriteOnce\r\n  resources:\r\n    requests:\r\n      storage: 500Mi\r\n\r\n---\r\napiVersion: v1\r\nkind: Service\r\nmetadata:\r\n  namespace: {{ namespace }}\r\n  name: {{ app_id }}\r\n  labels:\r\n    app: {{ app_id }}\r\n    user: {{ user_id }}\r\nspec:\r\n  ports:\r\n    - protocol: TCP\r\n      port: 80\r\n      targetPort: 8888\r\n  selector:\r\n    app: {{ app_id }}\r\n    user: {{ user_id }}\r\n\r\n---\r\napiVersion: keda.sh/v1alpha1\r\nkind: ScaledObject\r\nmetadata:\r\n  name: {{ app_id }}\r\n  namespace: {{ namespace }}\r\nspec:\r\n  scaleTargetRef:\r\n    name: {{ app_id }}\r\n  pollingInterval: 15\r\n  cooldownPeriod: 600\r\n  minReplicaCount: 0\r\n  maxReplicaCount: 1\r\n  advanced:\r\n    horizontalPodAutoscalerConfig:\r\n      behavior:\r\n        scaleDown:\r\n          stabilizationWindowSeconds: 600\r\n          policies:\r\n          - type: Percent\r\n            value: 100\r\n            periodSeconds: 15\r\n        scaleUp:\r\n          selectPolicy: Disabled\r\n  triggers:\r\n    - type: prometheus\r\n      metricType: Value\r\n      metadata:\r\n        serverAddress: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090\r\n        query: max(max(sum(rate(container_fs_reads_total{container!=\"\",job=\"kubelet\",metrics_path=\"/metrics/cadvisor\",pod=~\"{{ app_id }}.*\"}[2m30s])+rate(container_fs_writes_total{container!=\"\",job=\"kubelet\",metrics_path=\"/metrics/cadvisor\",pod=~\"{{ app_id }}.*\"}[2m30s]))) * 100 > bool 10 or (time() - kube_pod_created{pod=~\"{{app_id}}.*\", namespace=\"{{ namespace }}\"} < bool 300))\r\n        threshold: \"1\"\r\n        ignoreNullValues: \"false\"\r\n\r\n---\r\napiVersion: networking.k8s.io/v1\r\nkind: Ingress\r\nmetadata:\r\n  name: {{ app_id }}\r\n  namespace: {{ namespace }}\r\nspec:\r\n  ingressClassName: nginx\r\n  rules:\r\n  - host: {{ app_id }}.{{ proxy_domain }}\r\n    http:\r\n      paths:\r\n      - path: /\r\n        pathType: Prefix\r\n        backend:\r\n          service:\r\n            name: {{ app_id }}\r\n            port:\r\n              number: 80",
      "description": "Jupyterlab",
      "created_at": "2024-06-21T19:02:58.594Z",
      "updated_at": "2024-06-21T19:22:09.455Z",
      "organisations": [1]
    }
  },
  {
    "model": "apps.apptemplate",
    "pk": 3,
    "fields": {
      "template_id": "w0y9pwymwdvq",
      "name": "VS Code",
      "category": 3,
      "expose_node_port": false,
      "run_command_template": "",
      "managed": false,
      "manifest": "---\r\napiVersion: apps/v1\r\nkind: Deployment\r\nmetadata:\r\n  namespace: {{ namespace }}\r\n  name: {{ app_id }}\r\n  labels:\r\n    app: {{ app_id }}\r\n    user: {{ user_id }}\r\nspec:\r\n  replicas: 1\r\n  selector:\r\n    matchLabels:\r\n      app: {{ app_id }}\r\n      user: {{ user_id }}\r\n  strategy:\r\n    type: Recreate\r\n  template:\r\n    metadata:\r\n      labels:\r\n        app: {{ app_id }}\r\n        user: {{ user_id }}\r\n    spec:\r\n      containers:\r\n        - name: code-server\r\n          image: lscr.io/linuxserver/code-server:latest\r\n          ports:\r\n            - containerPort: 8443\r\n              name: code-server\r\n\r\n          env:\r\n            - name: PUID\r\n              value: \"1000\"\r\n            - name: PGID\r\n              value: \"1000\"\r\n            - name: TZ\r\n              value: \"Europe/Warsaw\"\r\n            - name: PASSWORD\r\n              value: \"password\"\r\n            - name: SUDO_PASSWORD\r\n              value: \"password\"\r\n            - name: PROXY_DOMAIN\r\n              value: \"{{ app_id }}.{{ proxy_domain }}\"\r\n            - name: DEFAULT_WORKSPACE\r\n              value: \"/workspace\"\r\n\r\n          volumeMounts:\r\n            - name: data\r\n              mountPath: /workspace\r\n\r\n      volumes:\r\n        - name: data\r\n          persistentVolumeClaim:\r\n            claimName: {{ app_id }}\r\n\r\n---\r\napiVersion: v1\r\nkind: PersistentVolumeClaim\r\nmetadata:\r\n  namespace: {{ namespace }}\r\n  name: {{ app_id }}\r\n  labels:\r\n    app: {{ app_id }}\r\n    user: {{ user_id }}\r\nspec:\r\n  accessModes:\r\n    - ReadWriteOnce\r\n  resources:\r\n    requests:\r\n      storage: 500Mi\r\n\r\n---\r\napiVersion: v1\r\nkind: Service\r\nmetadata:\r\n  namespace: {{ namespace }}\r\n  name: {{ app_id }}\r\n  labels:\r\n    app: {{ app_id }}\r\n    user: {{ user_id }}\r\nspec:\r\n  ports:\r\n    - protocol: TCP\r\n      port: 80\r\n      targetPort: 8443\r\n  selector:\r\n    app: {{ app_id }}\r\n    user: {{ user_id }}\r\n\r\n---\r\napiVersion: keda.sh/v1alpha1\r\nkind: ScaledObject\r\nmetadata:\r\n  name: {{ app_id }}\r\n  namespace: {{ namespace }}\r\nspec:\r\n  scaleTargetRef:\r\n    name: {{ app_id }}\r\n  pollingInterval: 15\r\n  cooldownPeriod: 600\r\n  minReplicaCount: 0\r\n  maxReplicaCount: 1\r\n  advanced:\r\n    horizontalPodAutoscalerConfig:\r\n      behavior:\r\n        scaleDown:\r\n          stabilizationWindowSeconds: 600\r\n          policies:\r\n          - type: Percent\r\n            value: 100\r\n            periodSeconds: 15\r\n        scaleUp:\r\n          selectPolicy: Disabled\r\n  triggers:\r\n    - type: prometheus\r\n      metricType: Value\r\n      metadata:\r\n        serverAddress: http://kube-prometheus-stack-prometheus.monitoring.svc.cluster.local:9090\r\n        query: max(max(sum(rate(container_fs_reads_total{container!=\"\",job=\"kubelet\",metrics_path=\"/metrics/cadvisor\",pod=~\"{{ app_id }}.*\"}[2m30s])+rate(container_fs_writes_total{container!=\"\",job=\"kubelet\",metrics_path=\"/metrics/cadvisor\",pod=~\"{{ app_id }}.*\"}[2m30s]))) * 100 > bool 10 or (time() - kube_pod_created{pod=~\"{{app_id}}.*\", namespace=\"{{ namespace }}\"} < bool 300))\r\n        threshold: \"1\"\r\n        ignoreNullValues: \"false\"\r\n\r\n---\r\napiVersion: networking.k8s.io/v1\r\nkind: Ingress\r\nmetadata:\r\n  name: {{ app_id }}\r\n  namespace: {{ namespace }}\r\nspec:\r\n  ingressClassName: nginx\r\n  rules:\r\n  - host: {{ app_id }}.{{ proxy_domain }}\r\n    http:\r\n      paths:\r\n      - path: /\r\n        pathType: Prefix\r\n        backend:\r\n          service:\r\n            name: {{ app_id }}\r\n            port:\r\n              number: 80",
      "description": "",
      "created_at": "2024-06-21T19:32:42.776Z",
      "updated_at": "2024-06-21T19:32:42.776Z",
      "organisations": [1]
    }
  },
  {
    "model": "apps.app",
    "pk": 41,
    "fields": {
      "app_id": "co4u9ofyg20j",
      "name": "vs",
      "managed_app": null,
      "template": 3,
      "organisation": 1,
      "user": 4,
      "created_by": 4,
      "created_at": "2024-06-21T19:32:56.644Z",
      "updated_at": "2024-06-21T19:32:56.644Z"
    }
  }
]
